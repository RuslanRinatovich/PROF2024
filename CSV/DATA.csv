Сессия 1.
Основные таблицы
1. Patient (Пациенты)
Id;Surname;Name;Patronymic;Birthday;PassportSeries;PassportNumber;Gender;Address;Phone;Email;MedcardId;PolicyNumber;PolicyExpirationDate;InsuranceCompany;WorkPlace;Photo
1;Joseph;Zephr;Brennan;26.05.2023;6716;486932;F;P.O. Box 806, 9645 Molestie Av.;1-688-333-3845;vivamus.rhoncus.donec@protonmail.org;1001;4176256909145450;10.03.2024;Vitae Erat Corp.;Nam Consequat Industries;1.jpg
2;Woodard;Wendy;Kathleen;16.06.2000;1208;725761;F;Ap #578-3613 Purus. Ave;1-686-781-5281;elit@aol.net;1002;475159839881889;23.05.2023;Sed Pede LLP;Mattis Ornare Corp.;2.jpg
3;Miranda;Hanae;Vernon;31.05.2016;9671;512198;F;Ap #917-4658 Magna. Rd.;1-459-266-5376;ac.urna.ut@google.couk;1003;4757435350968080;08.02.2024;Scelerisque Dui Foundation;Neque Pellentesque Corp.;3.jpg
4;Decker;Uma;Orli;04.12.1968;6350;976100;F;P.O. Box 218, 8684 Suspendisse Rd.;1-586-356-8986;auctor.quis@icloud.ca;1004;8184785391001540;03.12.2024;Enim Mi Incorporated;Euismod Industries;4.jpg
5;Shaw;Brynn;Raja;03.10.2006;7837;350345;F;238-9932 Natoque Street;1-882-277-5092;pede.suspendisse.dui@aol.couk;1005;6707172911167840;07.06.2023;Sed Neque Sed Company;Consectetuer Adipiscing Associates;5.jpg
6;Stanley;Jenette;Lisandra;23.11.2017;7871;376487;F;Ap #893-5856 Risus St.;1-265-412-5870;id.risus@aol.com;1006;1839826778502810;23.05.2024;Sem Mollis Industries;Vitae Risus Duis Inc.;6.jpg
7;Boyd;Geraldine;Christian;31.12.2009;3536;659283;F;781-3934 Tristique Ave;1-925-226-9711;adipiscing@icloud.ca;1007;2418624765439240;31.07.2023;Ultricies Dignissim Institute;Nostra Corp.;7.jpg
8;Benson;Julie;Sylvia;25.11.2011;1727;626059;F;P.O. Box 154, 859 Gravida. St.;1-663-131-5774;nunc@protonmail.net;1008;9445251245327340;02.06.2023;Nulla Facilisis Suspendisse Corp.;Aenean Gravida Associates;8.jpg
9;Estrada;Kim;Aaron;20.03.1991;2170;574896;F;501-7532 Ornare. St.;1-823-256-4625;sollicitudin@yahoo.edu;1009;4270477300805370;18.04.2023;Maecenas Libero Est Associates;Dui Nec Associates;9.jpg
10;Ball;Dacey;Abbot;24.02.1979;8021;456909;F;Ap #758-9170 Dui Av.;1-864-545-9746;ac.turpis@protonmail.org;1010;3939756474627640;07.01.2024;Ut Pharetra Ltd;Erat Volutpat PC;10.jpg
11;Branch;Lois;Melinda;16.10.1979;4666;978450;F;6086 Nec Avenue;1-897-711-6571;turpis.aliquam@icloud.net;1011;618295665910200;22.04.2023;Dis Industries;Ac PC;11.jpg
12;Gonzalez;Zelda;Yuri;12.06.2003;1777;864284;F;3269 Sollicitudin Road;1-412-638-8563;aliquet.magna@outlook.net;1012;4838823227477620;22.05.2024;Ut Cursus Inc.;Nunc Ut Erat Foundation;12.jpg
13;Klein;Pearl;Tarik;19.08.2003;1705;317839;F;257-869 Mattis. Road;1-615-347-0698;et@hotmail.net;1013;6157297183277170;12.09.2024;Risus Donec Incorporated;Mauris Sagittis Placerat Institute;13.jpg
14;Stone;Chantale;Kane;15.10.1958;7182;242143;F;P.O. Box 498, 8503 Convallis Rd.;1-583-156-5131;tincidunt@hotmail.com;1014;3287678512438480;11.03.2024;A Malesuada Incorporated;Mi Lacinia Mattis Inc.;14.jpg
15;Burgess;Ivy;Evangeline;19.03.1997;9458;700189;F;407-8548 Ullamcorper, Avenue;1-502-817-4684;ut.cursus@hotmail.net;1015;2149709021846860;06.11.2024;Convallis Inc.;Ullamcorper Viverra Maecenas Corp.;15.jpg
16;Solis;Karina;Armand;23.07.1976;8999;866448;F;P.O. Box 585, 5990 Lectus, St.;1-662-201-6049;pulvinar@outlook.edu;1016;2238990947184920;19.05.2024;Tincidunt Orci Quis Industries;Magna Et LLP;16.jpg
17;Casey;Hanna;Harper;17.11.1955;9816;497764;F;Ap #778-4390 Ipsum. St.;1-425-337-5877;magna.praesent@hotmail.couk;1017;8684026042094160;29.01.2024;Ornare Egestas Ltd;Pellentesque Sed Inc.;17.jpg
18;Weber;Keelie;Dara;22.07.1981;5265;833678;F;Ap #510-6038 Justo Street;1-469-552-7388;ipsum@google.couk;1018;1188493505623950;05.03.2023;Gravida Sit Amet LLP;Neque Nullam Industries;18.jpg
19;Thomas;Yael;Judith;21.01.1987;9935;301830;F;411-1445 Velit Road;1-576-466-1773;ac.mattis@outlook.com;1019;3391579360536390;18.09.2023;Et Lacinia LLP;Suspendisse Corporation;19.jpg
20;Chan;Basia;Rosalyn;03.03.1987;6542;570973;F;P.O. Box 789, 271 Proin Av.;1-821-860-6337;vel.mauris@outlook.com;1020;4482539577608390;12.12.2023;Auctor Odio Incorporated;Ligula Consectetuer Rhoncus Limited;20.jpg
21;Livingston;Ingrid;Darryl;10.06.1991;5976;900875;F;474-8385 Odio Avenue;1-648-841-4815;eleifend.nec.malesuada@hotmail.edu;1021;2087892711427880;13.01.2024;Per Inceptos Company;Eleifend Non Ltd;21.jpg
22;Branch;Noelle;Alexa;13.10.1991;5933;272569;F;Ap #769-3998 Libero. St.;1-677-585-3588;et@yahoo.net;1022;1706593288474060;17.11.2023;Imperdiet Non Foundation;Mi Tempor Foundation;22.jpg
23;Harper;Aiko;Austin;03.05.1999;2760;260707;F;930-8334 Congue. Street;1-276-340-0947;ante.iaculis@hotmail.net;1023;4377512571288180;15.03.2023;Parturient Montes Industries;Ultrices Iaculis Corp.;23.jpg
24;Burns;Lara;Raphael;01.02.1964;7591;100577;F;P.O. Box 375, 7265 Est Rd.;1-111-784-8725;scelerisque.neque@icloud.com;1024;8495222186992690;19.02.2023;Sed Eget Industries;Ornare Libero At Limited;24.jpg
25;Snider;Ocean;Joan;03.01.2002;5733;862483;F;Ap #521-8948 Nunc Av.;1-615-460-2248;ullamcorper.magna@icloud.net;1025;3494279655000580;23.06.2024;Enim Sed Foundation;Ultrices Sit Limited;25.jpg
26;Ortiz;Sydnee;Macey;25.03.2004;5535;638345;F;Ap #582-4209 Metus Rd.;1-483-495-9765;non.leo.vivamus@aol.net;1026;1751076156590440;22.05.2023;Odio Sagittis Industries;Nulla Facilisi Sed Industries;26.jpg
27;Lynn;Aretha;Alexis;02.04.1998;1390;302241;F;958-1738 Libero St.;1-476-818-1352;pharetra.felis@google.edu;1027;2652908391352560;23.05.2024;Semper Dui Lectus Associates;Libero Nec Ligula PC;27.jpg
28;Hutchinson;Petra;Xyla;10.07.2015;8403;494457;F;4186 Auctor Rd.;1-675-703-0657;feugiat.tellus.lorem@icloud.org;1028;6424581699833010;09.05.2024;Eu Eros Nam PC;Commodo Ipsum Suspendisse PC;28.jpg
29;Todd;Georgia;Amity;15.12.2016;6402;538308;F;773-6013 Sollicitudin Avenue;1-647-686-5164;nunc.laoreet@protonmail.net;1029;7010159825180900;13.02.2023;Velit Cras Limited;Risus Donec LLP;29.jpg
30;Roberts;Pamela;Anastasia;06.05.1983;9348;398635;F;Ap #114-3887 Natoque St.;1-757-180-9635;mollis@yahoo.edu;1030;1488684281202920;20.06.2024;Phasellus Elit Pede Foundation;Pede Cras Corp.;30.jpg
31;Rivers;Astra;Demetria;24.03.1964;3394;804427;F;3543 Urna. Av.;1-189-582-1227;egestas.urna@outlook.ca;1031;2771077059084940;26.11.2023;Elit Sed Institute;Scelerisque Industries;31.jpg
32;Baird;Ivory;Declan;11.04.2015;6820;920471;F;944-217 In, Street;1-314-442-1587;et@hotmail.org;1032;9158898108784340;23.02.2023;Ac Turpis Egestas Corporation;Semper Nam Tempor LLC;32.jpg
33;Mullins;Briar;Charde;06.01.1968;7748;486616;F;Ap #916-5366 Purus. St.;1-384-371-8842;lobortis.quam.a@protonmail.couk;1033;5519502346664090;15.03.2023;Malesuada Fames Company;In Faucibus Inc.;33.jpg
34;Franks;Anne;Ulysses;30.09.1954;9489;950259;F;P.O. Box 722, 3222 Rutrum. Rd.;1-753-357-7593;risus.nunc@aol.org;1034;2591915703505750;25.11.2024;Sagittis LLC;Pretium Neque Morbi Industries;34.jpg
35;Blackwell;Brielle;Brendan;02.06.1985;6444;946577;F;P.O. Box 217, 8221 Dignissim St.;1-592-832-3413;tortor@icloud.edu;1035;3905662813147350;13.09.2024;Sociis Natoque Corp.;Urna Nec LLC;35.jpg
36;Gonzalez;Imelda;Priscilla;08.01.1994;3058;592145;F;588-5928 Nulla Street;1-608-321-1765;elit.sed.consequat@yahoo.couk;1036;5511271663490360;27.08.2023;Nulla Vulputate Incorporated;Viverra Corporation;36.jpg
37;Rosario;Noel;Charles;03.02.1998;9572;579310;F;Ap #302-9555 Vitae Rd.;1-578-446-1729;rhoncus.nullam.velit@aol.couk;1037;9713955243718340;02.12.2024;Urna Associates;Vitae Diam Incorporated;37.jpg
38;Carson;Chloe;Shellie;31.07.1983;7728;697343;F;824-2419 Luctus Avenue;1-492-205-4538;a.dui@hotmail.net;1038;2178520209958980;07.04.2024;Ac Foundation;Sed Ltd;38.jpg
39;Robinson;Natalie;Brenden;16.02.2015;2037;527023;F;P.O. Box 271, 7871 Rhoncus. St.;1-811-785-8106;dolor.fusce@yahoo.com;1039;7968263958341460;12.11.2024;Nisl Elementum Institute;Ullamcorper Duis Incorporated;39.jpg
40;Forbes;Clementine;Malcolm;22.12.2016;6245;811763;F;976-7889 Cras Rd.;1-357-237-1931;sapien.molestie@yahoo.org;1040;3713423393326950;30.05.2024;In LLP;Aenean Massa Ltd;40.jpg
41;Santana;Hedy;Demetrius;07.10.2008;2707;394751;F;543-9088 Ac Rd.;1-512-697-3374;tempus@outlook.couk;1041;157060586866819;22.01.2025;Mi Eleifend Associates;Auctor Ltd;41.jpg
42;Bridges;Zelenia;James;29.11.1994;2627;733211;F;Ap #613-6682 Eget, Avenue;1-223-648-0452;aenean.eget.metus@outlook.edu;1042;1169577470671910;08.12.2023;Nullam Incorporated;Feugiat Non Institute;42.jpg
43;Logan;Amy;Todd;08.04.1955;9778;263689;F;Ap #774-3011 Ut, Rd.;1-345-522-7116;aliquet.vel.vulputate@outlook.edu;1043;9349161122378080;21.11.2023;Pellentesque Eget Dictum Institute;Dapibus Quam Corp.;43.jpg
44;Thompson;Katell;Audra;15.01.2005;5421;912252;F;420-9789 Egestas St.;1-925-628-2108;mi.fringilla@outlook.org;1044;1251270177678650;25.07.2024;Montes Nascetur Inc.;Semper Foundation;44.jpg
45;Davidson;Cailin;Shelley;08.04.1995;7070;122187;F;328-8082 Odio St.;1-643-687-1176;phasellus.nulla@aol.couk;1045;5315907109071200;25.05.2023;Sed Associates;Sed Dictum Inc.;45.jpg
46;Nichols;Gretchen;Ezra;19.05.2006;5461;818683;F;P.O. Box 373, 8063 Odio. Rd.;1-932-175-9848;et.risus.quisque@yahoo.ca;1046;9114923374865200;01.08.2024;Quisque Libero Incorporated;Mauris Nulla Institute;46.jpg
47;Coffey;Danielle;Jasmine;04.09.2021;9638;546041;F;806-7167 Neque Road;1-197-286-3151;fusce.dolor@outlook.couk;1047;6442968992260730;17.03.2023;Magna Duis Inc.;Convallis Industries;47.jpg
48;Gross;Quintessa;Murphy;31.05.1981;7028;792734;F;P.O. Box 622, 3631 Purus, Street;1-652-463-7044;vitae.posuere@google.edu;1048;4904018712933090;25.03.2023;Consectetuer Euismod LLC;Morbi Limited;48.jpg
49;Shelton;Leslie;Carl;28.06.1956;7329;881353;F;P.O. Box 506, 3955 Tellus St.;1-829-132-3935;posuere@protonmail.ca;1049;9486683728117800;03.05.2023;Integer LLC;Placerat Orci Corp.;49.jpg
50;Parrish;Cassady;Maya;11.09.2006;1148;991951;F;486 Malesuada Road;1-975-776-2382;fusce.dolor.quam@hotmail.ca;1050;7124126618656470;29.07.2023;Ut Dolor Foundation;Metus In Nec Corp.;50.jpg
51;Hurley;Merrill;Curran;26.02.1975;4827;852986;M;8816 Tellus. Rd.;1-546-627-9444;sapien@google.ca;1051;4423871366663350;28.05.2023;Molestie Sodales Institute;Feugiat Placerat Velit LLP;51.jpg
52;Cooley;Logan;Cain;31.10.1996;4892;984422;M;108-2649 A Road;1-444-287-3947;magna.ut@protonmail.ca;1052;9606886345277240;04.02.2023;Aliquam Fringilla Associates;Eu Tellus LLP;52.jpg
53;Burke;Cullen;Maris;11.11.1955;4908;359865;M;584-7576 Et St.;1-221-747-0384;commodo.hendrerit.donec@google.com;1053;7431994904057900;03.01.2025;Mi Ac Mattis Company;Fringilla LLP;53.jpg
54;Hudson;Drew;Wyoming;17.05.2010;6793;604764;M;P.O. Box 537, 1925 Nulla. St.;1-637-706-2643;mauris@hotmail.ca;1054;372513713093622;14.09.2024;Est Arcu LLP;Metus Facilisis Lorem LLP;54.jpg
55;Singleton;Alfonso;Tate;13.09.1990;9849;814533;M;194-7183 Tincidunt Road;1-648-531-8886;posuere.cubilia.curae@icloud.edu;1055;693708225472895;05.03.2023;Tempus Non Lacinia Incorporated;Malesuada Incorporated;55.jpg
56;Sykes;Nolan;Zephr;11.03.2008;3678;451880;M;382-8101 Quisque St.;1-763-719-3268;senectus.et.netus@outlook.com;1056;697762003025652;18.02.2023;Lectus Quis Incorporated;Sapien Imperdiet Ornare Company;56.jpg
57;Evans;Harding;Todd;07.05.2018;2441;925329;M;P.O. Box 491, 1781 Nec Av.;1-188-586-6604;eu.metus@protonmail.org;1057;426772847604391;12.06.2023;Lorem PC;Hendrerit Donec Industries;57.jpg
58;Lloyd;Ezra;Ivan;10.07.1986;9638;386695;M;560-326 Eu, Av.;1-804-233-1187;taciti.sociosqu@google.edu;1058;4347551954650650;13.12.2023;Dolor Elit Corporation;Augue Sed Company;58.jpg
59;Deleon;Erasmus;Timon;29.04.2015;3674;824906;M;692-9992 Sem Avenue;1-486-389-6115;quisque.ornare@hotmail.couk;1059;6444349750961300;09.09.2023;Sed PC;Vestibulum Accumsan Consulting;59.jpg
60;Joyner;Merritt;Colleen;06.11.2006;7045;143349;M;518-1920 Eu, St.;1-613-312-8608;ut.odio@protonmail.net;1060;7855910110213850;08.09.2024;Non Lobortis Quis Institute;Nisl Sem Institute;60.jpg
61;Steele;Russell;Hoyt;09.10.1974;8947;767637;M;983-6778 Cursus St.;1-337-587-4852;lacinia.sed@outlook.edu;1061;9129901356194530;03.04.2024;Gravida Sagittis Limited;Pede Sagittis Foundation;61.jpg
62;Sanchez;Linus;Amery;01.12.1981;5402;234821;M;Ap #748-6219 Dis Ave;1-432-797-6037;tellus.sem@hotmail.com;1062;5602705018848190;26.04.2023;Molestie In Tempus PC;Pellentesque Ultricies Institute;62.jpg
63;Gentry;Elvis;Edan;29.01.2000;3338;785816;M;Ap #141-7224 Metus. Av.;1-222-417-6543;nunc.commodo@protonmail.com;1063;7000780833512480;13.01.2025;Montes Nascetur Ridiculus Corporation;Fermentum Convallis Ligula Consulting;63.jpg
64;Gilliam;Davis;Britanni;27.07.2024;5414;926717;M;P.O. Box 682, 3291 Mauris Av.;1-363-535-6074;velit.egestas@google.couk;1064;3537337956379130;30.04.2023;Facilisis Company;Auctor Ltd;64.jpg
65;Gay;Ezra;Tamara;20.04.2000;6414;174708;M;675-3938 Tincidunt Rd.;1-583-229-0880;nibh.dolor@google.org;1065;485150922435524;03.10.2024;Integer Company;Diam Dictum PC;65.jpg
66;Villarreal;Chester;Cally;17.06.1999;9530;436084;M;504-5594 Sed St.;1-671-514-8459;ac.urna@yahoo.edu;1066;6393036949637580;13.12.2023;Lobortis Quam Limited;Nulla Dignissim Maecenas LLP;66.jpg
67;Harrell;Phelan;Margaret;01.11.1993;8046;930276;M;355-1764 Fusce Street;1-143-637-5531;enim.etiam.imperdiet@yahoo.edu;1067;8396287857072880;25.02.2024;Vel Inc.;Amet Foundation;67.jpg
68;Galloway;Dillon;Nadine;12.07.1972;2813;200109;M;3920 Proin Street;1-486-341-1182;mauris@hotmail.couk;1068;7805828892988770;14.02.2023;Aliquam Incorporated;Cursus Industries;68.jpg
69;Strong;Neil;Calvin;20.06.1972;2385;639765;M;4992 Nec Ave;1-482-926-6167;natoque.penatibus.et@aol.org;1069;4370778949884070;21.01.2024;Sed Eu Nibh Foundation;Fermentum Vel Foundation;69.jpg
70;Mckinney;Caesar;Silas;25.08.1989;4414;399938;M;P.O. Box 371, 1808 At Rd.;1-871-472-5262;at.pretium@google.ca;1070;2340302804283000;14.11.2024;Mauris Ut Consulting;Aliquam Rutrum Foundation;70.jpg
71;Snider;Edan;Jolie;22.06.1972;4480;449163;M;8440 Mattis Road;1-271-534-3662;enim@outlook.com;1071;6667340304365930;25.12.2023;Parturient Montes Corp.;Euismod Enim PC;71.jpg
72;Fields;Lee;Marny;16.06.2021;9079;170199;M;Ap #102-9086 Non Street;1-724-757-4915;pulvinar.arcu@aol.ca;1072;1002398996256730;06.02.2023;Malesuada Fames Incorporated;Urna Vivamus Corp.;72.jpg
73;Snyder;Kennedy;Jaden;10.01.2014;6000;805774;M;7505 Tristique Av.;1-522-556-3181;duis.ac.arcu@hotmail.couk;1073;4469217561331150;14.01.2025;Lacus Incorporated;Lorem Tristique Industries;73.jpg
74;Love;Tarik;Hector;11.04.1995;8144;567352;M;530-7057 Metus Street;1-241-576-4813;turpis.vitae@yahoo.edu;1074;7335281403888510;04.04.2023;Cras Dictum Institute;Sem Pellentesque LLC;74.jpg
75;Schroeder;Nolan;Benedict;19.05.1995;1838;291710;M;8623 Nisi Road;1-457-860-2981;quis@google.edu;1075;3618114445427480;18.08.2023;Sed Foundation;Parturient Company;75.jpg
76;Holden;Brett;Allen;11.12.1999;5330;718923;M;776-6834 Sodales Avenue;1-266-492-4191;nulla@aol.org;1076;8893403679927980;29.12.2024;Tempor Est Ac Ltd;Amet Orci Incorporated;76.jpg
77;Gamble;Grady;Lucius;15.11.2019;6708;105644;M;1604 Non, Avenue;1-384-546-9441;odio.phasellus.at@outlook.com;1077;6418908610790280;13.03.2024;Aenean Massa Foundation;Euismod Ac Foundation;77.jpg
78;Pickett;Abdul;Moses;26.01.1958;3444;872526;M;Ap #602-1614 Vitae St.;1-545-541-1147;sapien.nunc@yahoo.net;1078;6439747189361290;08.06.2024;In Molestie LLP;Iaculis PC;78.jpg
79;Pollard;Gil;Zoe;06.07.2009;9929;759156;M;147 Eu, Ave;1-628-183-8590;diam.sed@icloud.ca;1079;8203072030578760;23.06.2023;Interdum Inc.;Duis Limited;79.jpg
80;Moran;Nolan;Quin;15.04.2024;4964;224143;M;Ap #453-2865 Et Road;1-456-187-8352;dis.parturient.montes@protonmail.com;1080;9495880847502110;04.02.2024;Pulvinar Associates;Lorem Institute;80.jpg
81;Davis;Warren;Jemima;14.05.1992;5729;638604;M;P.O. Box 557, 5596 Vel, Ave;1-861-461-4098;id.ante@google.ca;1081;8114887497680670;10.08.2023;Leo Morbi Neque Inc.;Suspendisse Eleifend Cras Foundation;81.jpg
82;Olson;Luke;Lani;14.03.2015;8180;575325;M;P.O. Box 956, 9268 Sagittis Rd.;1-648-874-4753;et.magnis.dis@hotmail.org;1082;2984812362282100;21.10.2024;Non Corp.;Ipsum Nunc PC;82.jpg
83;Burgess;Carson;Maia;21.11.1975;1153;178802;M;7479 Neque Road;1-660-572-2616;dolor@outlook.net;1083;2700117484849340;02.01.2024;Nunc Ac Mattis Corp.;Duis Elementum Institute;83.jpg
84;Ochoa;Hammett;Lewis;25.10.1984;4992;793992;M;P.O. Box 565, 4559 Vivamus Rd.;1-486-585-4442;purus.gravida@icloud.com;1084;4461721764158880;01.01.2024;Adipiscing Elit LLC;Sapien Molestie Institute;84.jpg
85;Parks;Felix;Garrett;26.04.2004;1981;903686;M;640-6458 Quam Street;1-555-445-2375;fringilla.donec@hotmail.edu;1085;6576321530924360;23.05.2023;Tellus Consulting;Nec Leo Consulting;85.jpg
86;Bass;Gage;Kiara;10.06.1991;9020;438691;M;272-1450 Morbi St.;1-265-807-6978;massa@google.net;1086;4420703890029900;01.02.2023;Risus In PC;Elit Fermentum Company;86.jpg
87;Hardy;Macon;Angelica;17.04.2024;2392;777180;M;Ap #919-9975 Morbi Street;1-459-685-5579;id.erat@google.edu;1087;1182583532687710;26.10.2024;Nam LLC;Orci Quis Corp.;87.jpg
88;Frederick;Prescott;Vaughan;07.10.1955;8101;747693;M;P.O. Box 105, 9886 Eu Street;1-224-720-6338;in@outlook.edu;1088;1188960523307950;26.09.2024;At Lacus LLC;Sed Hendrerit Company;88.jpg
89;Acevedo;Kamal;Beau;16.11.2014;8021;620196;M;3346 Posuere Rd.;1-506-676-4278;vel.est@google.net;1089;4913193470938590;23.02.2024;Suspendisse LLP;In Mi Foundation;89.jpg
90;Williamson;Clayton;Steven;11.11.1972;8336;417169;M;P.O. Box 432, 2129 Enim Street;1-415-585-8959;nullam.velit.dui@icloud.ca;1090;1649731765448060;10.01.2024;Molestie Sodales Mauris Company;Nunc Foundation;90.jpg
91;Franks;Amery;Sacha;06.09.1957;3032;550233;M;4780 Fusce Street;1-835-688-5588;senectus.et@yahoo.org;1091;2471119514311240;18.10.2024;Eros Nam Inc.;Malesuada Vel Limited;91.jpg
92;Mcknight;Hasad;Tana;31.03.1989;2829;773781;M;Ap #509-9236 Fusce Av.;1-237-510-2135;sed.diam@yahoo.ca;1092;7612936134090470;24.04.2024;Nunc Incorporated;Euismod In Corp.;92.jpg
93;Gay;Kaseem;Eric;22.04.1959;7013;655409;M;Ap #423-4891 Eleifend Avenue;1-165-726-6873;orci.consectetuer@icloud.ca;1093;2690721297094520;04.04.2024;Duis Foundation;Fringilla LLC;93.jpg
94;Sandoval;Brett;Jillian;11.03.1977;1582;869693;M;9630 A, Street;1-743-757-5258;ullamcorper.velit@outlook.org;1094;8485852435134810;24.04.2024;Diam LLC;Mauris Ut Institute;94.jpg
95;Mcmillan;Damian;Marshall;02.07.1981;8147;621097;M;8511 Commodo Rd.;1-228-516-1513;dolor.dolor@google.edu;1095;6456738997511280;19.12.2023;Sed Turpis Institute;Libero Proin Institute;95.jpg
96;Ruiz;Blaze;Marsden;12.01.1978;2700;962663;M;Ap #402-1611 Malesuada. St.;1-617-325-4631;vestibulum.accumsan@hotmail.com;1096;3034217372669980;24.04.2023;Netus Et Limited;Quis Diam PC;96.jpg
97;Barber;Lyle;Joshua;06.04.1980;3994;917724;M;Ap #985-2517 Consequat, Rd.;1-127-874-5220;neque.vitae@icloud.com;1097;9666658412719850;24.11.2023;Tristique Associates;Interdum Nunc Limited;97.jpg
98;Wiggins;Brent;Brenda;16.01.1991;8029;367110;M;Ap #547-7567 Nunc St.;1-833-701-1308;enim@hotmail.edu;1098;6823501218292840;27.11.2024;Purus Ac Inc.;Euismod Est Inc.;98.jpg
99;Lawson;Levi;Lyle;27.12.1965;4106;121936;M;834-9084 Vestibulum, St.;1-588-582-7878;consequat@outlook.com;1099;1962965686925130;05.09.2024;Malesuada Inc.;Tellus Justo LLC;99.jpg
100;Henson;Garth;Judah;29.01.1970;2942;993115;M;464 Mi Street;1-275-830-8632;cras.eget@icloud.edu;1100;6953953104352930;04.01.2025;Pede Et Inc.;Libero Et Foundation;100.jpg

2. Medcard (Медкарта)
MedcardId;IssueDate;Diagnosis;LastVisitDate;NextVisitDate;QR
1001;28.02.2023;Ожирение;28.02.2023;;QRcard1001.jpg
1002;02.10.2022;Геморрой;02.10.2022;;QRcard1002.jpg
1003;11.01.2023;Гастрит;11.01.2023;;QRcard1003.jpg
1004;30.04.2023;Гипертония;30.04.2023;;QRcard1004.jpg
1005;05.11.2022;Мигрень;05.11.2022;;QRcard1005.jpg
1006;02.12.2024;Песок в почках;02.12.2024;;QRcard1006.jpg
1007;14.07.2024;Плоскостопие;14.07.2024;;QRcard1007.jpg
1008;03.03.2023;Боль в спине;03.03.2023;;QRcard1008.jpg
1009;22.07.2023;Здоров;22.07.2023;;QRcard1009.jpg
1010;20.12.2024;Здоров;20.12.2024;;QRcard1010.jpg
1011;25.12.2023;Ожирение;25.12.2023;;QRcard1011.jpg
1012;05.05.2023;Геморрой;05.05.2023;;QRcard1012.jpg
1013;14.07.2023;Гастрит;14.07.2023;;QRcard1013.jpg
1014;31.10.2024;Гипертония;31.10.2024;;QRcard1014.jpg
1015;30.06.2024;Мигрень;30.06.2024;;QRcard1015.jpg
1016;15.10.2023;Песок в почках;15.10.2023;;QRcard1016.jpg
1017;09.08.2024;Плоскостопие;09.08.2024;;QRcard1017.jpg
1018;18.01.2024;Боль в спине;18.01.2024;;QRcard1018.jpg
1019;14.09.2023;Ожирение;14.09.2023;;QRcard1019.jpg
1020;22.04.2024;Геморрой;22.04.2024;;QRcard1020.jpg
1021;20.06.2023;Гастрит;20.06.2023;;QRcard1021.jpg
1022;02.10.2024;Гипертония;02.10.2024;;QRcard1022.jpg
1023;13.05.2024;Мигрень;13.05.2024;;QRcard1023.jpg
1024;21.11.2023;Песок в почках;21.11.2023;;QRcard1024.jpg
1025;08.11.2022;Плоскостопие;08.11.2022;;QRcard1025.jpg
1026;08.04.2024;Боль в спине;08.04.2024;;QRcard1026.jpg
1027;25.07.2023;Ожирение;25.07.2023;;QRcard1027.jpg
1028;19.11.2022;Геморрой;19.11.2022;;QRcard1028.jpg
1029;25.10.2023;Гастрит;25.10.2023;;QRcard1029.jpg
1030;25.04.2024;Гипертония;25.04.2024;;QRcard1030.jpg
1031;20.09.2022;Мигрень;20.09.2022;;QRcard1031.jpg
1032;28.09.2022;Песок в почках;28.09.2022;;QRcard1032.jpg
1033;15.11.2023;Плоскостопие;15.11.2023;;QRcard1033.jpg
1034;11.12.2024;Боль в спине;11.12.2024;;QRcard1034.jpg
1035;26.04.2024;Ожирение;26.04.2024;;QRcard1035.jpg
1036;04.11.2022;Геморрой;04.11.2022;;QRcard1036.jpg
1037;23.02.2024;Гастрит;23.02.2024;;QRcard1037.jpg
1038;10.09.2022;Гипертония;10.09.2022;;QRcard1038.jpg
1039;30.11.2023;Мигрень;30.11.2023;;QRcard1039.jpg
1040;23.07.2024;Песок в почках;23.07.2024;;QRcard1040.jpg
1041;10.03.2024;Плоскостопие;10.03.2024;;QRcard1041.jpg
1042;26.12.2024;Боль в спине;26.12.2024;;QRcard1042.jpg
1043;24.05.2023;Ожирение;24.05.2023;;QRcard1043.jpg
1044;25.06.2024;Геморрой;25.06.2024;;QRcard1044.jpg
1045;22.10.2024;Гастрит;22.10.2024;;QRcard1045.jpg
1046;16.06.2023;Гипертония;16.06.2023;;QRcard1046.jpg
1047;17.12.2022;Мигрень;17.12.2022;;QRcard1047.jpg
1048;01.11.2022;Песок в почках;01.11.2022;;QRcard1048.jpg
1049;22.06.2024;Плоскостопие;22.06.2024;;QRcard1049.jpg
1050;10.09.2023;Боль в спине;10.09.2023;;QRcard1050.jpg
1051;27.12.2024;Ожирение;27.12.2024;;QRcard1051.jpg
1052;29.07.2024;Геморрой;29.07.2024;;QRcard1052.jpg
1053;23.09.2023;Гастрит;23.09.2023;;QRcard1053.jpg
1054;07.04.2023;Гипертония;07.04.2023;;QRcard1054.jpg
1055;26.11.2022;Мигрень;26.11.2022;;QRcard1055.jpg
1056;13.01.2025;Песок в почках;13.01.2025;;QRcard1056.jpg
1057;05.09.2022;Плоскостопие;05.09.2022;;QRcard1057.jpg
1058;07.05.2024;Боль в спине;07.05.2024;;QRcard1058.jpg
1059;02.08.2023;Ожирение;02.08.2023;;QRcard1059.jpg
1060;17.09.2024;Геморрой;17.09.2024;;QRcard1060.jpg
1061;28.08.2023;Гастрит;28.08.2023;;QRcard1061.jpg
1062;15.02.2024;Гипертония;15.02.2024;;QRcard1062.jpg
1063;20.05.2023;Мигрень;20.05.2023;;QRcard1063.jpg
1064;29.04.2023;Песок в почках;29.04.2023;;QRcard1064.jpg
1065;04.07.2024;Плоскостопие;04.07.2024;;QRcard1065.jpg
1066;03.08.2024;Боль в спине;03.08.2024;;QRcard1066.jpg
1067;24.07.2023;Ожирение;24.07.2023;;QRcard1067.jpg
1068;31.07.2023;Геморрой;31.07.2023;;QRcard1068.jpg
1069;13.12.2022;Гастрит;13.12.2022;;QRcard1069.jpg
1070;20.03.2023;Гипертония;20.03.2023;;QRcard1070.jpg
1071;19.03.2023;Мигрень;19.03.2023;;QRcard1071.jpg
1072;26.05.2024;Песок в почках;26.05.2024;;QRcard1072.jpg
1073;17.03.2023;Плоскостопие;17.03.2023;;QRcard1073.jpg
1074;20.08.2023;Боль в спине;20.08.2023;;QRcard1074.jpg
1075;20.04.2024;Ожирение;20.04.2024;;QRcard1075.jpg
1076;05.03.2023;Геморрой;05.03.2023;;QRcard1076.jpg
1077;28.03.2023;Гастрит;28.03.2023;;QRcard1077.jpg
1078;14.03.2024;Гипертония;14.03.2024;;QRcard1078.jpg
1079;11.09.2024;Мигрень;11.09.2024;;QRcard1079.jpg
1080;20.10.2022;Песок в почках;20.10.2022;;QRcard1080.jpg
1081;04.07.2023;Плоскостопие;04.07.2023;;QRcard1081.jpg
1082;10.11.2022;Боль в спине;10.11.2022;;QRcard1082.jpg
1083;12.05.2023;Ожирение;12.05.2023;;QRcard1083.jpg
1084;20.11.2023;Геморрой;20.11.2023;;QRcard1084.jpg
1085;26.03.2023;Гастрит;26.03.2023;;QRcard1085.jpg
1086;18.09.2024;Гипертония;18.09.2024;;QRcard1086.jpg
1087;23.12.2023;Мигрень;23.12.2023;;QRcard1087.jpg
1088;09.07.2024;Песок в почках;09.07.2024;;QRcard1088.jpg
1089;23.02.2023;Плоскостопие;23.02.2023;;QRcard1089.jpg
1090;22.10.2022;Боль в спине;22.10.2022;;QRcard1090.jpg
1091;06.05.2023;Ожирение;06.05.2023;;QRcard1091.jpg
1092;08.05.2024;Геморрой;08.05.2024;;QRcard1092.jpg
1093;09.12.2024;Гастрит;09.12.2024;;QRcard1093.jpg
1094;19.07.2024;Гипертония;19.07.2024;;QRcard1094.jpg
1095;26.09.2023;Мигрень;26.09.2023;;QRcard1095.jpg
1096;18.11.2022;Песок в почках;18.11.2022;;QRcard1096.jpg
1097;16.10.2023;Плоскостопие;16.10.2023;;QRcard1097.jpg
1098;15.08.2023;Боль в спине;15.08.2023;;QRcard1098.jpg
1099;05.11.2024;Здоров;05.11.2024;;QRcard1099.jpg
1100;08.11.2024;Здоров;08.11.2024;;QRcard1100.jpg

3. Prescription(рецепт на лекарства)

4. DeseaseHistory(История болезни)
Id;VisitDate;MedcardId;Description;DoctorId
1;28.02.2023;1001;Жалоб нет. Живот нормальный;1
2;02.10.2022;1002;Жалобы есть. ;2
3;11.01.2023;1003;Жалоб нет. Живот нормальный;3
4;30.04.2023;1004;Жалобы есть. ;4
5;05.11.2022;1005;Жалоб нет. Живот нормальный;5
6;02.12.2024;1006;Жалобы есть. ;6
7;14.07.2024;1007;Жалоб нет. Живот нормальный;7
8;03.03.2023;1008;Жалобы есть. ;8
9;22.07.2023;1009;Жалоб нет. Живот нормальный;9
10;20.12.2024;1010;Жалобы есть. ;10
11;25.12.2023;1011;Жалоб нет. Живот нормальный;1
12;05.05.2023;1012;Жалобы есть. ;2
13;14.07.2023;1013;Жалоб нет. Живот нормальный;3
14;31.10.2024;1014;Жалобы есть. ;4
15;30.06.2024;1015;Жалоб нет. Живот нормальный;5
16;15.10.2023;1016;Жалобы есть. ;6
17;09.08.2024;1017;Жалоб нет. Живот нормальный;7
18;18.01.2024;1018;Жалобы есть. ;8
19;14.09.2023;1019;Жалоб нет. Живот нормальный;9
20;22.04.2024;1020;Жалобы есть. ;10
21;20.06.2023;1021;Жалоб нет. Живот нормальный;1
22;02.10.2024;1022;Жалобы есть. ;2
23;13.05.2024;1023;Жалоб нет. Живот нормальный;3
24;21.11.2023;1024;Жалобы есть. ;4
25;08.11.2022;1025;Жалоб нет. Живот нормальный;5
26;08.04.2024;1026;Жалобы есть. ;6
27;25.07.2023;1027;Жалоб нет. Живот нормальный;7
28;19.11.2022;1028;Жалобы есть. ;8
29;25.10.2023;1029;Жалоб нет. Живот нормальный;9
30;25.04.2024;1030;Жалобы есть. ;10
31;20.09.2022;1031;Жалоб нет. Живот нормальный;1
32;28.09.2022;1032;Жалобы есть. ;2
33;15.11.2023;1033;Жалоб нет. Живот нормальный;3
34;11.12.2024;1034;Жалобы есть. ;4
35;26.04.2024;1035;Жалоб нет. Живот нормальный;5
36;04.11.2022;1036;Жалобы есть. ;6
37;23.02.2024;1037;Жалоб нет. Живот нормальный;7
38;10.09.2022;1038;Жалобы есть. ;8
39;30.11.2023;1039;Жалоб нет. Живот нормальный;9
40;23.07.2024;1040;Жалобы есть. ;10
41;10.03.2024;1041;Жалоб нет. Живот нормальный;1
42;26.12.2024;1042;Жалобы есть. ;2
43;24.05.2023;1043;Жалоб нет. Живот нормальный;3
44;25.06.2024;1044;Жалобы есть. ;4
45;22.10.2024;1045;Жалоб нет. Живот нормальный;5
46;16.06.2023;1046;Жалобы есть. ;6
47;17.12.2022;1047;Жалоб нет. Живот нормальный;7
48;01.11.2022;1048;Жалобы есть. ;8
49;22.06.2024;1049;Жалоб нет. Живот нормальный;9
50;10.09.2023;1050;Жалобы есть. ;10
51;27.12.2024;1051;Жалоб нет. Живот нормальный;1
52;29.07.2024;1052;Жалобы есть. ;2
53;23.09.2023;1053;Жалоб нет. Живот нормальный;3
54;07.04.2023;1054;Жалобы есть. ;4
55;26.11.2022;1055;Жалоб нет. Живот нормальный;5
56;13.01.2025;1056;Жалобы есть. ;6
57;05.09.2022;1057;Жалоб нет. Живот нормальный;7
58;07.05.2024;1058;Жалобы есть. ;8
59;02.08.2023;1059;Жалоб нет. Живот нормальный;9
60;17.09.2024;1060;Жалобы есть. ;10
61;28.08.2023;1061;Жалоб нет. Живот нормальный;1
62;15.02.2024;1062;Жалобы есть. ;2
63;20.05.2023;1063;Жалоб нет. Живот нормальный;3
64;29.04.2023;1064;Жалобы есть. ;4
65;04.07.2024;1065;Жалоб нет. Живот нормальный;5
66;03.08.2024;1066;Жалобы есть. ;6
67;24.07.2023;1067;Жалоб нет. Живот нормальный;7
68;31.07.2023;1068;Жалобы есть. ;8
69;13.12.2022;1069;Жалоб нет. Живот нормальный;9
70;20.03.2023;1070;Жалобы есть. ;10
71;19.03.2023;1071;Жалоб нет. Живот нормальный;1
72;26.05.2024;1072;Жалобы есть. ;2
73;17.03.2023;1073;Жалоб нет. Живот нормальный;3
74;20.08.2023;1074;Жалобы есть. ;4
75;20.04.2024;1075;Жалоб нет. Живот нормальный;5
76;05.03.2023;1076;Жалобы есть. ;6
77;28.03.2023;1077;Жалоб нет. Живот нормальный;7
78;14.03.2024;1078;Жалобы есть. ;8
79;11.09.2024;1079;Жалоб нет. Живот нормальный;9
80;20.10.2022;1080;Жалобы есть. ;10
81;04.07.2023;1081;Жалоб нет. Живот нормальный;1
82;10.11.2022;1082;Жалобы есть. ;2
83;12.05.2023;1083;Жалоб нет. Живот нормальный;3
84;20.11.2023;1084;Жалобы есть. ;4
85;26.03.2023;1085;Жалоб нет. Живот нормальный;5
86;18.09.2024;1086;Жалобы есть. ;6
87;23.12.2023;1087;Жалоб нет. Живот нормальный;7
88;09.07.2024;1088;Жалобы есть. ;8
89;23.02.2023;1089;Жалоб нет. Живот нормальный;9
90;22.10.2022;1090;Жалобы есть. ;10
91;06.05.2023;1091;Жалоб нет. Живот нормальный;1
92;08.05.2024;1092;Жалобы есть. ;2
93;09.12.2024;1093;Жалоб нет. Живот нормальный;3
94;19.07.2024;1094;Жалобы есть. ;4
95;26.09.2023;1095;Жалоб нет. Живот нормальный;5
96;18.11.2022;1096;Жалобы есть. ;6
97;16.10.2023;1097;Жалоб нет. Живот нормальный;7
98;15.08.2023;1098;Жалобы есть. ;8
99;05.11.2024;1099;Жалоб нет. Живот нормальный;9
100;08.11.2024;1100;Жалобы есть. ;10

5. Employee (Работники)
Id;Surname;Name;Patronymic;Birthday;PassportSeries;PassportNumber;Gender;Address;phone;Email;Photo;SpecializationId
1;Strickland;Aline;Lacey;14.07.2000;2203;200901;F;P.O. Box 174, 2985 Suscipit Rd.;1-736-274-2523;aliquam.adipiscing@yahoo.couk;1.jpg;1
2;Spears;Lee;Garrett;27.10.1971;3075;872273;F;370 Et St.;1-485-623-4707;proin.vel@hotmail.com;2.jpg;2
3;Pace;Cameran;Piper;12.11.2011;5445;841550;F;2166 Cursus Avenue;1-365-857-4837;justo.faucibus@outlook.net;3.jpg;3
4;Bryan;Riley;Blossom;21.09.2023;6701;501054;F;Ap #929-4260 Massa. Rd.;1-157-608-5083;non@aol.edu;4.jpg;4
5;Perkins;Aphrodite;Daquan;07.11.1964;4491;384368;F;4705 Justo Av.;1-750-355-4162;convallis.ligula@icloud.org;5.jpg;14
6;Ortiz;Remedios;Xaviera;01.11.1962;9539;672219;F;644-8512 Orci Street;1-687-974-2435;nisl.elementum@hotmail.org;6.jpg;14
7;Lindsey;Claire;Charlotte;27.03.1968;1844;956384;F;Ap #911-902 Morbi Av.;1-924-737-1671;urna.justo@aol.couk;7.jpg;7
8;Gillespie;Lana;Isabella;25.04.1998;9972;806781;F;Ap #834-9959 Aliquam Avenue;1-646-426-7365;consectetuer.adipiscing.elit@yahoo.ca;8.jpg;8
9;Carson;Lael;Kiona;28.11.1993;9005;641745;F;779 Ut Av.;1-351-113-2464;aliquam.arcu@hotmail.couk;9.jpg;9
10;Dodson;Regan;Anika;13.02.1958;4341;951730;F;Ap #730-9118 Egestas. Street;1-156-222-7576;tortor.integer.aliquam@icloud.couk;10.jpg;10
11;Strickland;Aline;Lacey;14.07.2000;2203;200901;M;P.O. Box 174, 2985 Suscipit Rd.;1-736-274-2523;nulla.integer.vulputate@aol.org;11.jpg;11
12;Spears;Lee;Garrett;27.10.1971;3075;872273;M;370 Et St.;1-485-623-4707;dictum@hotmail.net;12.jpg;12
13;Pace;Cameran;Piper;12.11.2011;5445;841550;M;2166 Cursus Avenue;1-365-857-4837;egestas@hotmail.com;13.jpg;13
14;Bryan;Riley;Blossom;21.09.2023;6701;501054;M;Ap #929-4260 Massa. Rd.;1-157-608-5083;diam@hotmail.com;14.jpg;14
15;Perkins;Aphrodite;Daquan;07.11.1964;4491;384368;M;4705 Justo Av.;1-750-355-4162;mattis.ornare@aol.edu;15.jpg;15
16;Ortiz;Remedios;Xaviera;01.11.1962;9539;672219;M;644-8512 Orci Street;1-687-974-2435;quis.lectus@icloud.org;16.jpg;6
17;Lindsey;Claire;Charlotte;27.03.1968;1844;956384;M;Ap #911-902 Morbi Av.;1-924-737-1671;auctor.mauris@outlook.com;17.jpg;7
18;Gillespie;Lana;Isabella;25.04.1998;9972;806781;M;Ap #834-9959 Aliquam Avenue;1-646-426-7365;vitae@protonmail.org;18.jpg;8
19;Carson;Lael;Kiona;28.11.1993;9005;641745;M;779 Ut Av.;1-351-113-2464;integer.eu@yahoo.com;19.jpg;9
20;Dodson;Regan;Anika;13.02.1958;4341;951730;M;Ap #730-9118 Egestas. Street;1-156-222-7576;ac.eleifend.vitae@protonmail.com;20.jpg;10

6. Specialization (Специализации)
Id;Title
1;Терапевт
2;Педиатр
3;Офтальмолог
4;Невролог
5;Стоматолог
6;Онколог
7;Врач общей практики
8;Акушер-гинеколог
9;Анестезиолог-реаниматолог
10;Травматолог
11;Врач ультразвуковой диагностики
12;Инфекционист
13;Диетолог
14;Сотрудник
15;Программист

7. Hospitalization (Госпитализация)
Id;DateTime;HospitalizationReferralId;RefusalByPatient;Cancellation;CancellationReason;HospitalBedId
1;09.12.2023 22:36;1;0;0;;1
2;16.03.2023 19:17;2;0;0;;2
3;08.01.2025 8:00;3;0;0;;3
4;31.10.2023 13:23;4;0;0;;4
5;16.10.2023 10:10;5;0;0;;5
6;11.07.2023 1:46;6;0;0;;6
7;06.02.2024 5:29;7;0;0;;7
8;17.10.2024 18:41;8;0;0;;8
9;06.09.2023 3:48;9;0;0;;9
10;15.03.2024 20:52;10;0;0;;10
11;02.04.2024 8:38;11;0;0;;11
12;03.09.2023 22:33;12;0;0;;12
13;09.06.2024 11:32;13;0;0;;13
14;11.01.2024 23:03;14;0;0;;14
15;31.10.2023 1:23;15;0;0;;15
16;28.09.2023 7:24;16;0;0;;16
17;04.06.2024 14:12;17;0;0;;17
18;03.02.2023 18:07;18;0;0;;18
19;16.02.2024 15:20;19;0;0;;19
20;05.09.2023 4:39;20;0;0;;20
21;24.11.2024 6:29;21;0;0;;21
22;05.10.2024 18:25;22;0;0;;22
23;01.02.2024 17:03;23;0;0;;23
24;25.03.2024 22:52;24;0;0;;24
25;07.02.2024 23:43;25;0;0;;25
26;16.04.2023 19:24;26;0;0;;26
27;18.09.2024 18:34;27;0;0;;27
28;19.08.2023 14:10;28;0;0;;28
29;29.11.2023 10:48;29;0;0;;29
30;16.11.2024 10:22;30;0;0;;30
31;26.11.2023 5:16;31;0;0;;31
32;23.10.2023 14:35;32;0;0;;32
33;26.03.2023 20:49;33;0;0;;33
34;16.09.2023 13:24;34;0;0;;34
35;15.02.2023 18:35;35;0;0;;35
36;11.01.2025 11:37;36;0;0;;36
37;06.11.2024 23:00;37;0;0;;37
38;27.01.2025 3:21;38;0;0;;38
39;01.03.2023 10:58;39;0;0;;39
40;20.08.2024 5:11;40;0;0;;40
41;14.10.2023 4:36;41;0;0;;41
42;21.02.2024 20:39;42;0;0;;42
43;17.03.2023 1:42;43;0;0;;43
44;01.08.2024 2:32;44;0;0;;44
45;26.02.2023 17:44;45;0;0;;45
46;08.10.2024 22:19;46;0;0;;46
47;27.09.2023 3:23;47;0;0;;47
48;12.06.2023 5:46;48;0;0;;48
49;19.10.2023 22:09;49;0;0;;49
50;24.02.2023 7:14;50;0;0;;50
51;06.08.2024 11:38;51;0;0;;51
52;07.11.2023 21:57;52;0;0;;52
53;01.01.2024 4:54;53;0;0;;53
54;02.01.2024 21:23;54;0;0;;54
55;01.11.2023 14:15;55;0;0;;55
56;15.06.2024 17:22;56;0;0;;56
57;21.12.2024 22:14;57;0;0;;57
58;14.03.2024 22:36;58;0;0;;58
59;11.11.2023 21:16;59;0;0;;59
60;07.12.2023 17:02;60;0;0;;60
61;17.11.2023 2:10;61;0;0;;61
62;18.04.2024 10:44;62;0;0;;62
63;16.01.2025 7:01;63;0;0;;63
64;27.05.2024 18:51;64;0;0;;64
65;22.10.2024 4:52;65;0;0;;65
66;07.06.2023 13:00;66;0;0;;66
67;18.11.2023 12:45;67;0;0;;67
68;18.07.2024 10:23;68;0;0;;68
69;29.10.2023 23:43;69;0;0;;69
70;27.09.2023 23:48;70;0;0;;31
71;29.10.2023 12:17;71;0;0;;30
72;27.06.2024 5:21;72;0;0;;29
73;05.09.2023 8:03;73;0;0;;28
74;07.10.2024 18:52;74;0;0;;27
75;09.10.2024 23:49;75;0;0;;26
76;21.12.2024 10:02;76;0;0;;25
77;11.07.2023 22:07;77;0;0;;24
78;08.11.2024 7:52;78;0;0;;23
79;10.04.2023 21:51;79;0;0;;22
80;10.10.2024 22:26;80;0;0;;21
81;04.12.2024 3:08;81;0;0;;20
82;16.09.2024 23:06;82;0;0;;19
83;28.06.2023 23:27;83;0;0;;18
84;28.07.2023 1:50;84;0;0;;17
85;06.06.2024 16:04;85;0;0;;16
86;04.12.2023 0:11;86;0;0;;15
87;11.05.2024 7:37;87;0;0;;14
88;05.03.2023 22:54;88;0;0;;13
89;11.09.2024 5:52;89;0;0;;12
90;20.08.2024 21:29;90;0;0;;11
91;29.04.2024 2:16;91;0;0;;10
92;02.04.2023 0:19;92;0;0;;9
93;06.02.2023 17:03;93;0;0;;8
94;08.05.2024 15:08;94;0;0;;7
95;02.12.2023 0:26;95;0;0;;6
96;10.11.2023 11:09;96;0;0;;5
97;04.04.2023 19:37;97;0;0;;4
98;10.01.2024 12:02;98;0;0;;3
99;20.04.2023 19:20;99;0;0;;2
100;05.11.2023 22:07;100;0;0;;1

8. HospitalizationReferral (Напраление на госпитализацию)
Id;PatientId;Diagnosis;Purpose; DepartmentId;Conditions
1;1;Болит сердце;Обследование;2;0
2;2;Шишка на руке;Операция;3;1
3;3;Аппендицит;Операция;4;0
4;4;Отравление;Промыть;5;1
5;5;Перелом руки;Операция;6;0
6;6;Повреждениями опорно-двигательной системы;Восстановление;7;1
7;7;Болит зуб;Лечение;11;0
8;8;Коньюктивит;Лечение;12;1
9;9;Болит сердце;Обследование;2;1
10;10;Шишка на руке;Операция;3;0
11;11;Аппендицит;Операция;4;1
12;12;Отравление;Промыть;5;0
13;13;Перелом руки;Операция;6;1
14;14;Повреждениями опорно-двигательной системы;Восстановление;7;0
15;15;Болит зуб;Лечение;11;1
16;16;Коньюктивит;Лечение;12;0
17;17;Болит сердце;Обследование;2;1
18;18;Шишка на руке;Операция;3;0
19;19;Аппендицит;Операция;4;1
20;20;Отравление;Промыть;5;0
21;21;Перелом руки;Операция;6;1
22;22;Повреждениями опорно-двигательной системы;Восстановление;7;0
23;23;Болит зуб;Лечение;11;1
24;24;Коньюктивит;Лечение;12;1
25;25;Болит сердце;Обследование;2;0
26;26;Шишка на руке;Операция;3;1
27;27;Аппендицит;Операция;4;0
28;28;Отравление;Промыть;5;1
29;29;Перелом руки;Операция;6;0
30;30;Повреждениями опорно-двигательной системы;Восстановление;7;1
31;31;Болит зуб;Лечение;11;0
32;32;Коньюктивит;Лечение;12;1
33;33;Болит сердце;Обследование;2;0
34;34;Шишка на руке;Операция;3;1
35;35;Аппендицит;Операция;4;0
36;36;Отравление;Промыть;5;1
37;37;Перелом руки;Операция;6;0
38;38;Повреждениями опорно-двигательной системы;Восстановление;7;1
39;39;Болит зуб;Лечение;11;1
40;40;Коньюктивит;Лечение;12;0
41;41;Болит сердце;Обследование;2;1
42;42;Шишка на руке;Операция;3;0
43;43;Аппендицит;Операция;4;1
44;44;Отравление;Промыть;5;0
45;45;Перелом руки;Операция;6;1
46;46;Повреждениями опорно-двигательной системы;Восстановление;7;0
47;47;Болит зуб;Лечение;11;1
48;48;Коньюктивит;Лечение;12;0
49;49;Болит сердце;Обследование;2;1
50;50;Шишка на руке;Операция;3;0
51;51;Аппендицит;Операция;4;1
52;52;Отравление;Промыть;5;0
53;53;Перелом руки;Операция;6;1
54;54;Повреждениями опорно-двигательной системы;Восстановление;7;1
55;55;Болит зуб;Лечение;11;0
56;56;Коньюктивит;Лечение;12;1
57;57;Болит сердце;Обследование;2;0
58;58;Шишка на руке;Операция;3;1
59;59;Аппендицит;Операция;4;0
60;60;Отравление;Промыть;5;1
61;61;Перелом руки;Операция;6;0
62;62;Повреждениями опорно-двигательной системы;Восстановление;7;1
63;63;Болит зуб;Лечение;11;0
64;64;Коньюктивит;Лечение;12;1
65;65;Болит сердце;Обследование;2;0
66;66;Шишка на руке;Операция;3;1
67;67;Аппендицит;Операция;4;0
68;68;Отравление;Промыть;5;1
69;69;Перелом руки;Операция;6;1
70;70;Повреждениями опорно-двигательной системы;Восстановление;7;0
71;71;Болит зуб;Лечение;11;1
72;72;Коньюктивит;Лечение;12;0
73;73;Болит сердце;Обследование;2;1
74;74;Шишка на руке;Операция;3;0
75;75;Аппендицит;Операция;4;1
76;76;Отравление;Промыть;5;0
77;77;Перелом руки;Операция;6;1
78;78;Повреждениями опорно-двигательной системы;Восстановление;7;0
79;79;Болит зуб;Лечение;11;1
80;80;Коньюктивит;Лечение;12;0
81;81;Болит сердце;Обследование;2;1
82;82;Шишка на руке;Операция;3;0
83;83;Аппендицит;Операция;4;1
84;84;Отравление;Промыть;5;1
85;85;Перелом руки;Операция;6;0
86;86;Повреждениями опорно-двигательной системы;Восстановление;7;1
87;87;Болит зуб;Лечение;11;0
88;88;Коньюктивит;Лечение;12;1
89;89;Болит сердце;Обследование;2;0
90;90;Шишка на руке;Операция;3;1
91;91;Аппендицит;Операция;4;0
92;92;Отравление;Промыть;5;1
93;93;Перелом руки;Операция;6;0
94;94;Повреждениями опорно-двигательной системы;Восстановление;7;1
95;95;Болит зуб;Лечение;11;0
96;96;Коньюктивит;Лечение;12;1
97;97;Болит сердце;Обследование;2;0
98;98;Шишка на руке;Операция;3;1
99;99;Аппендицит;Операция;4;1
100;100;Отравление;Промыть;5;0

9. HospitalizationDepartment (Отделения больницы)
Id;Title
1;Приемное отделение
2;Кардиологическое отделение
3;Хирургическое №1 (гнойное)
4;Хирургическое №2 (чистое)
5;Терапевтическое отделение
6;Травматологическое отделение
7;Ортопедическое отделение
8;Гинекологическое отделение
9;Урологическое отделение
10;Анастезиолого-реанимационное отделение
11;Кабинет стоматолога
12;Кабинет офтальмолога

10. EventType (Тип обследования)
Id;Title
1;лабораторное исследование
2;инструментальная диагностика
3;лекарственная терапия
4;физиотерапия
5;хирургическое лечение

11. HospitalBed (Койки)
Id;Title;WardId;IsFree
1;А;1;True
2;Б;1;True
3;В;1;True
4;Г;1;True
5;Д;1;False
6;А;2;False
7;Б;2;True
8;В;2;True
9;Г;2;True
10;Д;2;False
11;А;3;True
12;Б;3;False
13;В;3;False
14;Г;3;False
15;Д;3;False
16;Е;3;False
17;А;4;True
18;Б;4;True
19;В;4;False
20;Г;4;False
21;А;5;False
22;Б;5;False
23;В;5;False
24;Г;5;False
25;А;6;False
26;Б;6;False
27;В;6;False
28;Г;6;False
29;А;7;False
30;Б;7;True
31;В;7;False
32;Г;7;False
33;А;8;False
34;Б;8;False
35;В;8;False
36;А;9;False
37;Б;9;False
38;В;9;False
39;А;10;False
40;Б;10;True
41;В;10;False
42;А;11;False
43;Б;11;False
44;В;11;False
45;Г;11;False
46;А;12;False
47;Б;12;False
48;В;12;True
49;Г;12;False
50;А;13;False
51;Б;13;False
52;В;13;False
53;Г;13;False
54;А;14;False
55;Б;14;False
56;В;14;False
57;Г;14;False
58;А;15;False
59;Б;15;False
60;В;15;False
61;Г;15;False
62;Д;15;False
63;Е;15;False
64;А;16;False
65;Б;16;False
66;А;17;False
67;Б;17;False
68;А;18;False
69;Б;18;False

12. PatientReception (Запись пациента на приём)
Id;TimeBegin;TimeEnd;Patient;Status;TimeSheetId;CouponNumber
1;8:00:00;8:30:00;;0;1;1
2;8:30:00;9:00:00;;0;1;2
3;9:00:00;9:30:00;;0;1;3
4;9:30:00;10:00:00;;0;1;4
5;10:00:00;10:30:00;;0;1;5
6;10:30:00;11:00:00;;0;1;6
7;11:00:00;11:30:00;;0;1;7
8;11:30:00;12:00:00;;0;1;8
9;12:00:00;12:30:00;;0;1;9
10;12:30:00;13:00:00;;0;1;10
11;13:00:00;13:30:00;;0;1;11
12;13:30:00;14:00:00;;0;1;12
13;14:00:00;14:30:00;;0;1;13
14;14:30:00;15:00:00;;0;1;14
15;15:00:00;15:30:00;;0;1;15
16;8:00:00;8:30:00;;0;2;1
17;8:30:00;9:00:00;;0;2;2
18;9:00:00;9:30:00;;0;2;3
19;9:30:00;10:00:00;;0;2;4
20;10:00:00;10:30:00;;0;2;5
21;10:30:00;11:00:00;;0;2;6
22;11:00:00;11:30:00;;0;2;7
23;11:30:00;12:00:00;;0;2;8
24;12:00:00;12:30:00;;0;2;9
25;12:30:00;13:00:00;;0;2;10
26;13:00:00;13:30:00;;0;2;11
27;13:30:00;14:00:00;;0;2;12
28;14:00:00;14:30:00;;0;2;13
29;14:30:00;15:00:00;;0;2;14
30;15:00:00;15:30:00;;0;2;15
31;8:00:00;8:30:00;;0;3;1
32;8:30:00;9:00:00;;0;3;2
33;9:00:00;9:30:00;;0;3;3
34;9:30:00;10:00:00;;0;3;4
35;10:00:00;10:30:00;;0;3;5
36;10:30:00;11:00:00;;0;3;6
37;11:00:00;11:30:00;;0;3;7
38;11:30:00;12:00:00;;0;3;8
39;12:00:00;12:30:00;;0;3;9
40;12:30:00;13:00:00;;0;3;10
41;13:00:00;13:30:00;;0;3;11
42;13:30:00;14:00:00;;0;3;12
43;14:00:00;14:30:00;;0;3;13
44;14:30:00;15:00:00;;0;3;14
45;15:00:00;15:30:00;;0;3;15
46;13:00:00;13:30:00;;0;4;1
47;13:30:00;14:00:00;;0;4;2
48;14:00:00;14:30:00;;0;4;3
49;14:30:00;15:00:00;;0;4;4
50;15:00:00;15:30:00;;0;4;5
51;15:30:00;16:00:00;;0;4;6
52;16:00:00;16:30:00;;0;4;7
53;16:30:00;17:00:00;;0;4;8
54;17:00:00;17:30:00;;0;4;9
55;17:30:00;18:00:00;;0;4;10
56;8:00:00;8:30:00;;0;5;1
57;8:30:00;9:00:00;;0;5;2
58;9:00:00;9:30:00;;0;5;3
59;9:30:00;10:00:00;;0;5;4
60;10:00:00;10:30:00;;0;5;5
61;10:30:00;11:00:00;;0;5;6
62;11:00:00;11:30:00;;0;5;7
63;11:30:00;12:00:00;;0;5;8
64;12:00:00;12:30:00;;0;5;9
65;12:30:00;13:00:00;;0;5;10
66;13:00:00;13:30:00;;0;5;11
67;13:30:00;14:00:00;;0;5;12
68;14:00:00;14:30:00;;0;5;13
69;14:30:00;15:00:00;;0;5;14
70;15:00:00;15:30:00;;0;5;15
71;8:00:00;8:30:00;;0;6;1
72;8:30:00;9:00:00;;0;6;2
73;9:00:00;9:30:00;;0;6;3
74;9:30:00;10:00:00;;0;6;4
75;10:00:00;10:30:00;;0;6;5
76;10:30:00;11:00:00;;0;6;6
77;11:00:00;11:30:00;;0;6;7
78;11:30:00;12:00:00;;0;6;8
79;12:00:00;12:30:00;;0;6;9
80;12:30:00;13:00:00;;0;6;10
81;13:00:00;13:30:00;;0;6;11
82;13:30:00;14:00:00;;0;6;12
83;14:00:00;14:30:00;;0;6;13
84;14:30:00;15:00:00;;0;6;14
85;15:00:00;15:30:00;;0;6;15
86;8:00:00;8:30:00;;0;7;1
87;8:30:00;9:00:00;;0;7;2
88;9:00:00;9:30:00;;0;7;3
89;9:30:00;10:00:00;;0;7;4
90;10:00:00;10:30:00;;0;7;5
91;10:30:00;11:00:00;;0;7;6
92;11:00:00;11:30:00;;0;7;7
93;11:30:00;12:00:00;;0;7;8
94;12:00:00;12:30:00;;0;7;9
95;12:30:00;13:00:00;;0;7;10
96;13:00:00;13:30:00;;0;7;11
97;13:30:00;14:00:00;;0;7;12
98;14:00:00;14:30:00;;0;7;13
99;14:30:00;15:00:00;;0;7;14
100;15:00:00;15:30:00;;0;7;15
101;13:00:00;13:30:00;;0;8;1
102;13:30:00;14:00:00;;0;8;2
103;14:00:00;14:30:00;;0;8;3
104;14:30:00;15:00:00;;0;8;4
105;15:00:00;15:30:00;;0;8;5
106;15:30:00;16:00:00;;0;8;6
107;16:00:00;16:30:00;;0;8;7
108;16:30:00;17:00:00;;0;8;8
109;17:00:00;17:30:00;;0;8;9
110;17:30:00;18:00:00;;0;8;10
111;8:00:00;8:30:00;;0;9;1
112;8:30:00;9:00:00;;0;9;2
113;9:00:00;9:30:00;;0;9;3
114;9:30:00;10:00:00;;0;9;4
115;10:00:00;10:30:00;;0;9;5
116;10:30:00;11:00:00;;0;9;6
117;11:00:00;11:30:00;;0;9;7
118;11:30:00;12:00:00;;0;9;8
119;12:00:00;12:30:00;;0;9;9
120;12:30:00;13:00:00;;0;9;10
121;13:00:00;13:30:00;;0;9;11
122;13:30:00;14:00:00;;0;9;12
123;14:00:00;14:30:00;;0;9;13
124;14:30:00;15:00:00;;0;9;14
125;15:00:00;15:30:00;;0;9;15
126;8:00:00;8:30:00;;0;10;1
127;8:30:00;9:00:00;;0;10;2
128;9:00:00;9:30:00;;0;10;3
129;9:30:00;10:00:00;;0;10;4
130;10:00:00;10:30:00;;0;10;5
131;10:30:00;11:00:00;;0;10;6
132;11:00:00;11:30:00;;0;10;7
133;11:30:00;12:00:00;;0;10;8
134;12:00:00;12:30:00;;0;10;9
135;12:30:00;13:00:00;;0;10;10
136;13:00:00;13:30:00;;0;10;11
137;13:30:00;14:00:00;;0;10;12
138;14:00:00;14:30:00;;0;10;13
139;14:30:00;15:00:00;;0;10;14
140;15:00:00;15:30:00;;0;10;15
141;8:00:00;8:30:00;;0;11;1
142;8:30:00;9:00:00;;0;11;2
143;9:00:00;9:30:00;;0;11;3
144;9:30:00;10:00:00;;0;11;4
145;10:00:00;10:30:00;;0;11;5
146;10:30:00;11:00:00;;0;11;6
147;11:00:00;11:30:00;;0;11;7
148;11:30:00;12:00:00;;0;11;8
149;12:00:00;12:30:00;;0;11;9
150;12:30:00;13:00:00;;0;11;10
151;13:00:00;13:30:00;;0;11;11
152;13:30:00;14:00:00;;0;11;12
153;14:00:00;14:30:00;;0;11;13
154;14:30:00;15:00:00;;0;11;14
155;15:00:00;15:30:00;;0;11;15
156;13:00:00;13:30:00;;0;12;1
157;13:30:00;14:00:00;;0;12;2
158;14:00:00;14:30:00;;0;12;3
159;14:30:00;15:00:00;;0;12;4
160;15:00:00;15:30:00;;0;12;5
161;15:30:00;16:00:00;;0;12;6
162;16:00:00;16:30:00;;0;12;7
163;16:30:00;17:00:00;;0;12;8
164;17:00:00;17:30:00;;0;12;9
165;17:30:00;18:00:00;;0;12;10
166;8:00:00;8:30:00;;0;13;1
167;8:30:00;9:00:00;;0;13;2
168;9:00:00;9:30:00;;0;13;3
169;9:30:00;10:00:00;;0;13;4
170;10:00:00;10:30:00;;0;13;5
171;10:30:00;11:00:00;;0;13;6
172;11:00:00;11:30:00;;0;13;7
173;11:30:00;12:00:00;;0;13;8
174;12:00:00;12:30:00;;0;13;9
175;12:30:00;13:00:00;;0;13;10
176;13:00:00;13:30:00;;0;13;11
177;13:30:00;14:00:00;;0;13;12
178;14:00:00;14:30:00;;0;13;13
179;14:30:00;15:00:00;;0;13;14
180;15:00:00;15:30:00;;0;13;15
181;8:00:00;8:30:00;;0;14;1
182;8:30:00;9:00:00;;0;14;2
183;9:00:00;9:30:00;;0;14;3
184;9:30:00;10:00:00;;0;14;4
185;10:00:00;10:30:00;;0;14;5
186;10:30:00;11:00:00;;0;14;6
187;11:00:00;11:30:00;;0;14;7
188;11:30:00;12:00:00;;0;14;8
189;12:00:00;12:30:00;;0;14;9
190;12:30:00;13:00:00;;0;14;10
191;13:00:00;13:30:00;;0;14;11
192;13:30:00;14:00:00;;0;14;12
193;14:00:00;14:30:00;;0;14;13
194;14:30:00;15:00:00;;0;14;14
195;15:00:00;15:30:00;;0;14;15
196;8:00:00;8:30:00;;0;15;1
197;8:30:00;9:00:00;;0;15;2
198;9:00:00;9:30:00;;0;15;3
199;9:30:00;10:00:00;;0;15;4
200;10:00:00;10:30:00;;0;15;5
201;10:30:00;11:00:00;;0;15;6
202;11:00:00;11:30:00;;0;15;7
203;11:30:00;12:00:00;;0;15;8
204;12:00:00;12:30:00;;0;15;9
205;12:30:00;13:00:00;;0;15;10
206;13:00:00;13:30:00;;0;15;11
207;13:30:00;14:00:00;;0;15;12
208;14:00:00;14:30:00;;0;15;13
209;14:30:00;15:00:00;;0;15;14
210;15:00:00;15:30:00;;0;15;15
211;13:00:00;13:30:00;;0;16;1
212;13:30:00;14:00:00;;0;16;2
213;14:00:00;14:30:00;;0;16;3
214;14:30:00;15:00:00;;0;16;4
215;15:00:00;15:30:00;;0;16;5
216;15:30:00;16:00:00;;0;16;6
217;16:00:00;16:30:00;;0;16;7
218;16:30:00;17:00:00;;0;16;8
219;17:00:00;17:30:00;;0;16;9
220;17:30:00;18:00:00;;0;16;10
221;8:00:00;8:30:00;;0;17;1
222;8:30:00;9:00:00;;0;17;2
223;9:00:00;9:30:00;;0;17;3
224;9:30:00;10:00:00;;0;17;4
225;10:00:00;10:30:00;;0;17;5
226;10:30:00;11:00:00;;0;17;6
227;11:00:00;11:30:00;;0;17;7
228;11:30:00;12:00:00;;0;17;8
229;12:00:00;12:30:00;;0;17;9
230;12:30:00;13:00:00;;0;17;10
231;13:00:00;13:30:00;;0;17;11
232;13:30:00;14:00:00;;0;17;12
233;14:00:00;14:30:00;;0;17;13
234;14:30:00;15:00:00;;0;17;14
235;15:00:00;15:30:00;;0;17;15
236;8:00:00;8:30:00;;0;18;1
237;8:30:00;9:00:00;;0;18;2
238;9:00:00;9:30:00;;0;18;3
239;9:30:00;10:00:00;;0;18;4
240;10:00:00;10:30:00;;0;18;5
241;10:30:00;11:00:00;;0;18;6
242;11:00:00;11:30:00;;0;18;7
243;11:30:00;12:00:00;;0;18;8
244;12:00:00;12:30:00;;0;18;9
245;12:30:00;13:00:00;;0;18;10
246;13:00:00;13:30:00;;0;18;11
247;13:30:00;14:00:00;;0;18;12
248;14:00:00;14:30:00;;0;18;13
249;14:30:00;15:00:00;;0;18;14
250;15:00:00;15:30:00;;0;18;15
251;8:00:00;8:30:00;;0;19;1
252;8:30:00;9:00:00;;0;19;2
253;9:00:00;9:30:00;;0;19;3
254;9:30:00;10:00:00;;0;19;4
255;10:00:00;10:30:00;;0;19;5
256;10:30:00;11:00:00;;0;19;6
257;11:00:00;11:30:00;;0;19;7
258;11:30:00;12:00:00;;0;19;8
259;12:00:00;12:30:00;;0;19;9
260;12:30:00;13:00:00;;0;19;10
261;13:00:00;13:30:00;;0;19;11
262;13:30:00;14:00:00;;0;19;12
263;14:00:00;14:30:00;;0;19;13
264;14:30:00;15:00:00;;0;19;14
265;15:00:00;15:30:00;;0;19;15
266;13:00:00;13:30:00;;0;20;1
267;13:30:00;14:00:00;;0;20;2
268;14:00:00;14:30:00;;0;20;3
269;14:30:00;15:00:00;;0;20;4
270;15:00:00;15:30:00;;0;20;5
271;15:30:00;16:00:00;;0;20;6
272;16:00:00;16:30:00;;0;20;7
273;16:30:00;17:00:00;;0;20;8
274;17:00:00;17:30:00;;0;20;9
275;17:30:00;18:00:00;;0;20;10
276;8:00:00;8:30:00;;0;21;1
277;8:30:00;9:00:00;;0;21;2
278;9:00:00;9:30:00;;0;21;3
279;9:30:00;10:00:00;;0;21;4
280;10:00:00;10:30:00;;0;21;5
281;10:30:00;11:00:00;;0;21;6
282;11:00:00;11:30:00;;0;21;7
283;11:30:00;12:00:00;;0;21;8
284;12:00:00;12:30:00;;0;21;9
285;12:30:00;13:00:00;;0;21;10
286;13:00:00;13:30:00;;0;21;11
287;13:30:00;14:00:00;;0;21;12
288;14:00:00;14:30:00;;0;21;13
289;14:30:00;15:00:00;;0;21;14
290;15:00:00;15:30:00;;0;21;15
291;8:00:00;8:30:00;;0;22;1
292;8:30:00;9:00:00;;0;22;2
293;9:00:00;9:30:00;;0;22;3
294;9:30:00;10:00:00;;0;22;4
295;10:00:00;10:30:00;;0;22;5
296;10:30:00;11:00:00;;0;22;6
297;11:00:00;11:30:00;;0;22;7
298;11:30:00;12:00:00;;0;22;8
299;12:00:00;12:30:00;;0;22;9
300;12:30:00;13:00:00;;0;22;10
301;13:00:00;13:30:00;;0;22;11
302;13:30:00;14:00:00;;0;22;12
303;14:00:00;14:30:00;;0;22;13
304;14:30:00;15:00:00;;0;22;14
305;15:00:00;15:30:00;;0;22;15
306;8:00:00;8:30:00;;0;23;1
307;8:30:00;9:00:00;;0;23;2
308;9:00:00;9:30:00;;0;23;3
309;9:30:00;10:00:00;;0;23;4
310;10:00:00;10:30:00;;0;23;5
311;10:30:00;11:00:00;;0;23;6
312;11:00:00;11:30:00;;0;23;7
313;11:30:00;12:00:00;;0;23;8
314;12:00:00;12:30:00;;0;23;9
315;12:30:00;13:00:00;;0;23;10
316;13:00:00;13:30:00;;0;23;11
317;13:30:00;14:00:00;;0;23;12
318;14:00:00;14:30:00;;0;23;13
319;14:30:00;15:00:00;;0;23;14
320;15:00:00;15:30:00;;0;23;15
321;13:00:00;13:30:00;;0;24;1
322;13:30:00;14:00:00;;0;24;2
323;14:00:00;14:30:00;;0;24;3
324;14:30:00;15:00:00;;0;24;4
325;15:00:00;15:30:00;;0;24;5
326;15:30:00;16:00:00;;0;24;6
327;16:00:00;16:30:00;;0;24;7
328;16:30:00;17:00:00;;0;24;8
329;17:00:00;17:30:00;;0;24;9
330;17:30:00;18:00:00;;0;24;10
331;8:00:00;8:30:00;;0;25;1
332;8:30:00;9:00:00;;0;25;2
333;9:00:00;9:30:00;;0;25;3
334;9:30:00;10:00:00;;0;25;4
335;10:00:00;10:30:00;;0;25;5
336;10:30:00;11:00:00;;0;25;6
337;11:00:00;11:30:00;;0;25;7
338;11:30:00;12:00:00;;0;25;8
339;12:00:00;12:30:00;;0;25;9
340;12:30:00;13:00:00;;0;25;10
341;13:00:00;13:30:00;;0;25;11
342;13:30:00;14:00:00;;0;25;12
343;14:00:00;14:30:00;;0;25;13
344;14:30:00;15:00:00;;0;25;14
345;15:00:00;15:30:00;;0;25;15
346;8:00:00;8:30:00;;0;26;1
347;8:30:00;9:00:00;;0;26;2
348;9:00:00;9:30:00;;0;26;3
349;9:30:00;10:00:00;;0;26;4
350;10:00:00;10:30:00;;0;26;5
351;10:30:00;11:00:00;;0;26;6
352;11:00:00;11:30:00;;0;26;7
353;11:30:00;12:00:00;;0;26;8
354;12:00:00;12:30:00;;0;26;9
355;12:30:00;13:00:00;;0;26;10
356;13:00:00;13:30:00;;0;26;11
357;13:30:00;14:00:00;;0;26;12
358;14:00:00;14:30:00;;0;26;13
359;14:30:00;15:00:00;;0;26;14
360;15:00:00;15:30:00;;0;26;15
361;8:00:00;8:30:00;;0;27;1
362;8:30:00;9:00:00;;0;27;2
363;9:00:00;9:30:00;;0;27;3
364;9:30:00;10:00:00;;0;27;4
365;10:00:00;10:30:00;;0;27;5
366;10:30:00;11:00:00;;0;27;6
367;11:00:00;11:30:00;;0;27;7
368;11:30:00;12:00:00;;0;27;8
369;12:00:00;12:30:00;;0;27;9
370;12:30:00;13:00:00;;0;27;10
371;13:00:00;13:30:00;;0;27;11
372;13:30:00;14:00:00;;0;27;12
373;14:00:00;14:30:00;;0;27;13
374;14:30:00;15:00:00;;0;27;14
375;15:00:00;15:30:00;;0;27;15
376;13:00:00;13:30:00;;0;28;1
377;13:30:00;14:00:00;;0;28;2
378;14:00:00;14:30:00;;0;28;3
379;14:30:00;15:00:00;;0;28;4
380;15:00:00;15:30:00;;0;28;5
381;15:30:00;16:00:00;;0;28;6
382;16:00:00;16:30:00;;0;28;7
383;16:30:00;17:00:00;;0;28;8
384;17:00:00;17:30:00;;0;28;9
385;17:30:00;18:00:00;;0;28;10
386;8:00:00;8:30:00;;0;29;1
387;8:30:00;9:00:00;;0;29;2
388;9:00:00;9:30:00;;0;29;3
389;9:30:00;10:00:00;;0;29;4
390;10:00:00;10:30:00;;0;29;5
391;10:30:00;11:00:00;;0;29;6
392;11:00:00;11:30:00;;0;29;7
393;11:30:00;12:00:00;;0;29;8
394;12:00:00;12:30:00;;0;29;9
395;12:30:00;13:00:00;;0;29;10
396;13:00:00;13:30:00;;0;29;11
397;13:30:00;14:00:00;;0;29;12
398;14:00:00;14:30:00;;0;29;13
399;14:30:00;15:00:00;;0;29;14
400;15:00:00;15:30:00;;0;29;15
401;8:00:00;8:30:00;;0;30;1
402;8:30:00;9:00:00;;0;30;2
403;9:00:00;9:30:00;;0;30;3
404;9:30:00;10:00:00;;0;30;4
405;10:00:00;10:30:00;;0;30;5
406;10:30:00;11:00:00;;0;30;6
407;11:00:00;11:30:00;;0;30;7
408;11:30:00;12:00:00;;0;30;8
409;12:00:00;12:30:00;;0;30;9
410;12:30:00;13:00:00;;0;30;10
411;13:00:00;13:30:00;;0;30;11
412;13:30:00;14:00:00;;0;30;12
413;14:00:00;14:30:00;;0;30;13
414;14:30:00;15:00:00;;0;30;14
415;15:00:00;15:30:00;;0;30;15
416;8:00:00;8:30:00;;0;31;1
417;8:30:00;9:00:00;;0;31;2
418;9:00:00;9:30:00;;0;31;3
419;9:30:00;10:00:00;;0;31;4
420;10:00:00;10:30:00;;0;31;5
421;10:30:00;11:00:00;;0;31;6
422;11:00:00;11:30:00;;0;31;7
423;11:30:00;12:00:00;;0;31;8
424;12:00:00;12:30:00;;0;31;9
425;12:30:00;13:00:00;;0;31;10
426;13:00:00;13:30:00;;0;31;11
427;13:30:00;14:00:00;;0;31;12
428;14:00:00;14:30:00;;0;31;13
429;14:30:00;15:00:00;;0;31;14
430;15:00:00;15:30:00;;0;31;15
431;13:00:00;13:30:00;;0;32;1
432;13:30:00;14:00:00;;0;32;2
433;14:00:00;14:30:00;;0;32;3
434;14:30:00;15:00:00;;0;32;4
435;15:00:00;15:30:00;;0;32;5
436;15:30:00;16:00:00;;0;32;6
437;16:00:00;16:30:00;;0;32;7
438;16:30:00;17:00:00;;0;32;8
439;17:00:00;17:30:00;;0;32;9
440;17:30:00;18:00:00;;0;32;10
441;8:00:00;8:30:00;;0;33;1
442;8:30:00;9:00:00;;0;33;2
443;9:00:00;9:30:00;;0;33;3
444;9:30:00;10:00:00;;0;33;4
445;10:00:00;10:30:00;;0;33;5
446;10:30:00;11:00:00;;0;33;6
447;11:00:00;11:30:00;;0;33;7
448;11:30:00;12:00:00;;0;33;8
449;12:00:00;12:30:00;;0;33;9
450;12:30:00;13:00:00;;0;33;10
451;13:00:00;13:30:00;;0;33;11
452;13:30:00;14:00:00;;0;33;12
453;14:00:00;14:30:00;;0;33;13
454;14:30:00;15:00:00;;0;33;14
455;15:00:00;15:30:00;;0;33;15
456;8:00:00;8:30:00;;0;34;1
457;8:30:00;9:00:00;;0;34;2
458;9:00:00;9:30:00;;0;34;3
459;9:30:00;10:00:00;;0;34;4
460;10:00:00;10:30:00;;0;34;5
461;10:30:00;11:00:00;;0;34;6
462;11:00:00;11:30:00;;0;34;7
463;11:30:00;12:00:00;;0;34;8
464;12:00:00;12:30:00;;0;34;9
465;12:30:00;13:00:00;;0;34;10
466;13:00:00;13:30:00;;0;34;11
467;13:30:00;14:00:00;;0;34;12
468;14:00:00;14:30:00;;0;34;13
469;14:30:00;15:00:00;;0;34;14
470;15:00:00;15:30:00;;0;34;15
471;8:00:00;8:30:00;;0;35;1
472;8:30:00;9:00:00;;0;35;2
473;9:00:00;9:30:00;;0;35;3
474;9:30:00;10:00:00;;0;35;4
475;10:00:00;10:30:00;;0;35;5
476;10:30:00;11:00:00;;0;35;6
477;11:00:00;11:30:00;;0;35;7
478;11:30:00;12:00:00;;0;35;8
479;12:00:00;12:30:00;;0;35;9
480;12:30:00;13:00:00;;0;35;10
481;13:00:00;13:30:00;;0;35;11
482;13:30:00;14:00:00;;0;35;12
483;14:00:00;14:30:00;;0;35;13
484;14:30:00;15:00:00;;0;35;14
485;15:00:00;15:30:00;;0;35;15
486;13:00:00;13:30:00;;0;36;1
487;13:30:00;14:00:00;;0;36;2
488;14:00:00;14:30:00;;0;36;3
489;14:30:00;15:00:00;;0;36;4
490;15:00:00;15:30:00;;0;36;5
491;15:30:00;16:00:00;;0;36;6
492;16:00:00;16:30:00;;0;36;7
493;16:30:00;17:00:00;;0;36;8
494;17:00:00;17:30:00;;0;36;9
495;17:30:00;18:00:00;;0;36;10
496;8:00:00;8:30:00;;0;37;1
497;8:30:00;9:00:00;;0;37;2
498;9:00:00;9:30:00;;0;37;3
499;9:30:00;10:00:00;;0;37;4
500;10:00:00;10:30:00;;0;37;5
501;10:30:00;11:00:00;;0;37;6
502;11:00:00;11:30:00;;0;37;7
503;11:30:00;12:00:00;;0;37;8
504;12:00:00;12:30:00;;0;37;9
505;12:30:00;13:00:00;;0;37;10
506;13:00:00;13:30:00;;0;37;11
507;13:30:00;14:00:00;;0;37;12
508;14:00:00;14:30:00;;0;37;13
509;14:30:00;15:00:00;;0;37;14
510;15:00:00;15:30:00;;0;37;15
511;8:00:00;8:30:00;;0;38;1
512;8:30:00;9:00:00;;0;38;2
513;9:00:00;9:30:00;;0;38;3
514;9:30:00;10:00:00;;0;38;4
515;10:00:00;10:30:00;;0;38;5
516;10:30:00;11:00:00;;0;38;6
517;11:00:00;11:30:00;;0;38;7
518;11:30:00;12:00:00;;0;38;8
519;12:00:00;12:30:00;;0;38;9
520;12:30:00;13:00:00;;0;38;10
521;13:00:00;13:30:00;;0;38;11
522;13:30:00;14:00:00;;0;38;12
523;14:00:00;14:30:00;;0;38;13
524;14:30:00;15:00:00;;0;38;14
525;15:00:00;15:30:00;;0;38;15
526;8:00:00;8:30:00;;0;39;1
527;8:30:00;9:00:00;;0;39;2
528;9:00:00;9:30:00;;0;39;3
529;9:30:00;10:00:00;;0;39;4
530;10:00:00;10:30:00;;0;39;5
531;10:30:00;11:00:00;;0;39;6
532;11:00:00;11:30:00;;0;39;7
533;11:30:00;12:00:00;;0;39;8
534;12:00:00;12:30:00;;0;39;9
535;12:30:00;13:00:00;;0;39;10
536;13:00:00;13:30:00;;0;39;11
537;13:30:00;14:00:00;;0;39;12
538;14:00:00;14:30:00;;0;39;13
539;14:30:00;15:00:00;;0;39;14
540;15:00:00;15:30:00;;0;39;15
541;13:00:00;13:30:00;;0;40;1
542;13:30:00;14:00:00;;0;40;2
543;14:00:00;14:30:00;;0;40;3
544;14:30:00;15:00:00;;0;40;4
545;15:00:00;15:30:00;;0;40;5
546;15:30:00;16:00:00;;0;40;6
547;16:00:00;16:30:00;;0;40;7
548;16:30:00;17:00:00;;0;40;8
549;17:00:00;17:30:00;;0;40;9
550;17:30:00;18:00:00;;0;40;10

13. Referral (Направление)
14. Role (Роли)
Id;Title;AccessLevel
1;администратор;1
2;сотрудник регистратуры;2
3;специалист основных подразделений;3

15. Room (Кабинеты и помещения больницы)
Id;Title;Code;RoomTypeId
1;Вход;0;1
2;Регистратура;1;2
5;Комната утилизации медицинских расходов;2;3
6;Служебный туалет;3;3
7;Заведующая отделением;4;3
8;Главная медицинская сестра;5;3
9;Кабинет гигиены полости рта;6;2
10;Терапевтический кабинет;7;2
11;Терапевтический кабинет;8;2
12;Компьютерная;9;3
13;Гардеробная песонала;10;3
14;Бухгалтерия;11;3
15;Хирургический кабинет;12;2
16;Экономисты;13;3
17;Физиотерапевтический кабинет;14;2
18;Стоматологический кабинет;15;2
20;Заведующая хозяйством Специалист ОТ;16;3
21;Стерилизационная;17;2
22;Архив;18;3
24;Главный врач;19;3
25;Комната приёма пищи;20;3
26;Терапевтический кабинет;21;2
27;Санитарная комната;22;2
28;Общий туалет;23;1

16. RoomType(Типы)
Id;Title
1;Общее
2;Кабинет приема пациентов
3;Кабинеты сотрудников

17. TimeSheet (Расписание)
Id;Date;TimeBegin;TimeEnd;EmployeeId;DurationPersonTime;RoomId
1;05.02.2024;8:00;15:00;1;30;10
2;05.02.2024;8:00;15:00;2;30;11
3;05.02.2024;8:00;15:00;13;30;26
4;05.02.2024;13:00;18:00;17;30;17
5;06.02.2024;8:00;15:00;1;30;10
6;06.02.2024;8:00;15:00;2;30;11
7;06.02.2024;8:00;15:00;13;30;26
8;06.02.2024;13:00;18:00;17;30;17
9;07.02.2024;8:00;15:00;1;30;10
10;07.02.2024;8:00;15:00;2;30;11
11;07.02.2024;8:00;15:00;13;30;26
12;07.02.2024;13:00;18:00;17;30;17
13;08.02.2024;8:00;15:00;1;30;10
14;08.02.2024;8:00;15:00;2;30;11
15;08.02.2024;8:00;15:00;13;30;26
16;08.02.2024;13:00;18:00;17;30;17
17;09.02.2024;8:00;15:00;1;30;10
18;09.02.2024;8:00;15:00;2;30;11
19;09.02.2024;8:00;15:00;13;30;26
20;09.02.2024;13:00;18:00;17;30;17
21;12.02.2024;8:00;15:00;1;30;10
22;12.02.2024;8:00;15:00;2;30;11
23;12.02.2024;8:00;15:00;13;30;26
24;12.02.2024;13:00;18:00;17;30;17
25;13.02.2024;8:00;15:00;1;30;10
26;13.02.2024;8:00;15:00;2;30;11
27;13.02.2024;8:00;15:00;13;30;26
28;13.02.2024;13:00;18:00;17;30;17
29;14.02.2024;8:00;15:00;1;30;10
30;14.02.2024;8:00;15:00;2;30;11
31;14.02.2024;8:00;15:00;13;30;26
32;14.02.2024;13:00;18:00;17;30;17
33;15.02.2024;8:00;15:00;1;30;10
34;15.02.2024;8:00;15:00;2;30;11
35;15.02.2024;8:00;15:00;13;30;26
36;15.02.2024;13:00;18:00;17;30;17
37;16.02.2024;8:00;15:00;1;30;10
38;16.02.2024;8:00;15:00;2;30;11
39;16.02.2024;8:00;15:00;13;30;26
40;16.02.2024;13:00;18:00;17;30;17

18. TreatmentEvent (Обследование)
Id;DateTime;DoctorId;EventTypeId;Title;Results;Recommendations;PatientId;Price
1;09.12.2023 22:36;11;2;УЗИ Сердца;Обнаружено;Консультация терапевта;1;1700
2;16.03.2023 19:17;11;2;УЗИ Печени;Не обнаружено;Консультация терапевта;2;1500
3;08.01.2025 8:00;11;2;УЗИ Почек;Обнаружено;Консультация терапевта;3;1300
4;31.10.2023 13:23;11;2;УЗИ Ног;Не обнаружено;Консультация терапевта;4;1500
5;16.10.2023 10:10;11;2;УЗИ Легких;Обнаружено;Консультация терапевта;5;1330
6;11.07.2023 1:46;11;2;УЗИ Сердца;Обнаружено;Консультация терапевта;6;1550
7;06.02.2024 5:29;11;2;УЗИ Печени;Не обнаружено;Консультация терапевта;7;1770
8;17.10.2024 18:41;11;2;УЗИ Почек;Обнаружено;Консультация терапевта;8;1880
9;06.09.2023 3:48;11;2;УЗИ Ног;Не обнаружено;Консультация терапевта;9;1330
10;15.03.2024 20:52;11;2;УЗИ Легких;Обнаружено;Консультация терапевта;10;1800

19. User (Пользователи системы)
Id;Password;RoleId
1;00KG;3
2;KGIF;3
3;PXGL;3
4;IHM2;3
5;DT84;2
6;ITET;2
7;M7GG;3
8;FF8B;3
9;61P2;3
10;KPH6;3
11;F3ZX;3
12;GO79;3
13;MYME;3
14;4QC8;3
15;TDPZ;1
16;SIBZ;3
17;S140;3
18;V8MJ;3
19;YL7V;3
20;MH7A;3

20. Ward (Палаты)
Id;Title;DepartmentId
1;101;2
2;102;2
3;103;2
4;104;2
5;105;2
6;106;2
7;107;2
8;108;2
9;109;2
10;110;2
11;111;2
12;112;2
13;113;2
14;114;2
15;115;2
16;116;2
17;117;2
18;118;2
19;101;3
20;102;3
21;103;3
22;104;3
23;105;3
24;106;3
25;107;3
26;108;3
27;109;3
28;110;3
29;111;3
30;112;3
31;113;3
32;114;3
33;115;3
34;116;3
35;117;3
36;118;3

helloworldthis is crazy
<Application x:Class="MedInfoSystemApp.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:MedInfoSystemApp"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <!--цвета приложения для соответсвия стилю-->
        <SolidColorBrush x:Key="main" Color="#FFF"/>
        <SolidColorBrush x:Key="additional" Color="#2F2FA2"/>
        <SolidColorBrush x:Key="akcent" Color="#F64C72"/>
        <!--Стиль для окна-->
        <Style TargetType="Window" x:Key="base_window">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="MinHeight" Value="600"/>
            <Setter Property="MinWidth" Value="800"/>
            <Setter Property="Background" Value="{StaticResource main}"/>
        </Style>
        <!--стиль для страницы-->
        <Style TargetType="Page" x:Key="base_page">
            <Setter Property="FontFamily" Value="Calibri"/>
            <Setter Property="Background" Value="{StaticResource main}"/>
            <Setter Property="FontSize" Value="14"/>
        </Style>
        <!--стиль для полей ввода TextBox-->
        <Style TargetType="TextBox">
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding"  Value="3 0"/>
            <Setter Property="Background" Value="{StaticResource main}"/>
        </Style>


        <!--стиль для полей кнопок Button-->
        <Style TargetType="Button">
            <Setter Property="Width" Value="auto"/>
            <Setter Property="Height" Value="auto"/>
            <Setter Property="Background" Value="{StaticResource akcent}"/>
            <Setter Property="Foreground" Value="{StaticResource main}"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="3"/>
            <Setter Property="Padding" Value="5"/>
            <Setter Property="Height" Value="30"/>
        </Style>

        <!--стиль для меток TextBlock -->
        <Style TargetType="TextBlock" x:Key="base_textblock">
            <Setter Property="Height" Value="30"/>
            <Setter Property="VerticalAlignment" Value="Stretch"/>
            <Setter Property="HorizontalAlignment" Value="Stretch"/>
            <Setter Property="Padding"  Value="5"/>
            <Setter Property="Foreground" Value="{StaticResource main}"/>
        </Style>


        <Style TargetType="TextBlock" x:Key="add_window_textblock">
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="FontWeight" Value="Bold"/>
            <Setter Property="Margin" Value="0 0 10 0"/>
        </Style>
        <!--стиль для меток TextBlock -->
        <Style TargetType="TextBlock" x:Key="item_textblock">
            <Setter Property="TextAlignment" Value="Center"/>
            <Setter Property="VerticalAlignment" Value="Top"/>
            <Setter Property="TextWrapping" Value="Wrap"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="3"/>
        </Style>

        <!--стиль для меток ListViewItem -->
        <Style TargetType="ListBoxItem" x:Key="listbox_item">
            <Setter Property="BorderBrush" Value="{StaticResource akcent}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>
    </Application.Resources>

</Application>


using System.Data.Entity;

namespace MedInfoSystemApp.Models
{
    public partial class MicEntities : DbContext
    {
        private static MicEntities _context;
        /// <summary>
        /// Метод возвращающий контекст подключения
        /// </summary>
        /// <returns></returns>
        public static MicEntities GetContext()
        {
            if (_context == null)
            {
                _context = new MicEntities();
            }
            return _context;
        }

    }
}


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows.Controls;

namespace MedInfoSystemApp.Models
{
    public class Manager
    {
        public static Frame MainFrame { get; set; }
        public static User CurrentUser { get; set; }
    }
}


using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MedInfoSystemApp.Models
{
    public partial class Patient
    {

        public string GetPhoto
        {
            get
            {
                //если поле фото пустое, отобразим картинку заглушку
                if (Photo is null)
                    return Directory.GetCurrentDirectory() + @"\Images\picture.png";
                return Directory.GetCurrentDirectory() + @"\Images\Patients\" + Photo.Trim();
            }
        }


        public string GetQrCode
        {
            get
            {
                if (Medcard is null)
                    return null;
                //если поле фото пустое, отобразим картинку заглушку
                if (Medcard.QR is null)
                    return Directory.GetCurrentDirectory() + @"\Images\picture.png";
                return Directory.GetCurrentDirectory() + @"\Images\MedicalCards\" + Medcard.QR.Trim();
            }
        }

        public string GetIdFIO
        {
            get
            {
                return $"#{Id}: {Surname} {Name} {Patronymic}";
            }
        }
        public string GetFIO
        {
            get
            {

                return $"{Surname} {Name} {Patronymic}";
            }
        }
        public string GetPassport
        {
            get
            {

                return $"Паспорт: {PassportSeries} {PassportNumber}";
            }
        }

    }
}


<Window x:Class="MedInfoSystemApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MedInfoSystemApp"
        mc:Ignorable="d"
        Title="{Binding ElementName=MainFrame, Path=Content.Title}" 
    WindowStartupLocation="CenterScreen"
    Style="{StaticResource base_window}"
    Height="450" Width="800"
    Closing="WindowClosing" Closed="WindowClosed" >
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="75"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid Background="{StaticResource additional}"/>

        <Image  Margin="10" HorizontalAlignment="Left"/>

        <TextBlock Grid.Row="0" Text="МИС" 
           HorizontalAlignment="Center" 
           VerticalAlignment="Center"
           Foreground="{StaticResource main}"
           FontSize="20" FontWeight="Bold"/>
        <Frame x:Name="MainFrame" Grid.Row="1" 
         BorderBrush="{StaticResource akcent}"
         NavigationUIVisibility="Hidden" 
         BorderThickness="1" ContentRendered="MainFrame_ContentRendered"/>

       

        <TextBlock x:Name="TextBlockName" Width="auto" 
           Height="40" HorizontalAlignment="Right" 
           VerticalAlignment="Top"/>
        <StackPanel Grid.Row="0" Orientation="Horizontal" HorizontalAlignment="Right" Margin="0 0 20 0">

            <Button x:Name="BtnAddPatient" 
                 Click="BtnAddPatient_Click" ToolTip="Регистрация пациента" Content="Регистрация пациента">

            </Button>
            <Button x:Name="BtnBack" 
                 Click="BtnBackClick" ToolTip="Назад" Content="Назад" Visibility="Collapsed">
                
            </Button>
        </StackPanel>
        <Grid Grid.Row="2" Background="{StaticResource additional}"/>
    </Grid>
</Window>


using MedInfoSystemApp.Models;
using MedInfoSystemApp.Pages;
using QRCoder;
using QRCoder.Xaml;
using System;
using System.Windows;
using System.Windows.Media;

namespace MedInfoSystemApp
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        User _currentUser; //текущий пользователь в системе
        public MainWindow()
        {
            InitializeComponent();
            LoadData();
        }

        /// <summary>
        /// загружаем данные и инициализируем переменные
        /// </summary>
        void LoadData()
        {
            MainFrame.Navigate(new PatientsPage());
            Manager.MainFrame = MainFrame;
        }
        private void WindowClosed(object sender, EventArgs e)
        {
            // показать владельца формы
            //Owner.Show();
            // или если надо, то можно закрыть приложение  командой
            Application.Current.Shutdown();
        }

        //событие попытки закрытия окна,
        // если пользователь выберет Cancel, то форму не закроем
        private void WindowClosing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            MessageBoxResult x = MessageBox.Show("Вы действительно хотите выйти?", "Выйти",
              MessageBoxButton.OKCancel, MessageBoxImage.Question);
            if (x == MessageBoxResult.Cancel)
                e.Cancel = true;
        }

        private void BtnBackClick(object sender, RoutedEventArgs e)
        {
            Manager.MainFrame.GoBack();
        }



        private void MainFrame_ContentRendered(object sender, EventArgs e)
        {
            if (MainFrame.CanGoBack)
            {
                BtnBack.Visibility = Visibility.Visible;
            }
            else
            {
                BtnBack.Visibility = Visibility.Collapsed;
            }
        }

        void GenerateQrcode()
        {
            using (QRCodeGenerator qrGenerator = new QRCodeGenerator())
            using (QRCodeData qrCodeData = qrGenerator.CreateQrCode("The text which should be encoded.", QRCodeGenerator.ECCLevel.Q))
            {
                using (XamlQRCode qrCode = new XamlQRCode(qrCodeData))
                {
                    DrawingImage qrCodeAsXaml = qrCode.GetGraphic(20);
                }
            }
        }

        private void BtnAddPatient_Click(object sender, RoutedEventArgs e)
        {
            MainFrame.Navigate(new AddPatient(new Patient()));
        }
    }
}


<Page x:Class="MedInfoSystemApp.Pages.PatientsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MedInfoSystemApp.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Пациенты"
    IsVisibleChanged="PageIsVisibleChanged" 
    Style="{StaticResource base_page}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <WrapPanel Grid.Row="0" HorizontalAlignment="Stretch" 
           Background="{StaticResource additional}">

            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="ID:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="40" x:Name="TBoxID"  
             TextChanged="TBoxSearchTextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Фамилия:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="200" x:Name="TBoxSurname"  
             TextChanged="TBoxSearchTextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Имя:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="200" x:Name="TBoxName"  
             TextChanged="TBoxSearchTextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Серия паспорта:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="100" x:Name="TBoxPassportSeries"  
             TextChanged="TBoxSearchTextChanged" MaxLength="4"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Номер паспорта:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="100" x:Name="TBoxPassportNumber"  
             TextChanged="TBoxSearchTextChanged" MaxLength="6"/>
            </StackPanel>


            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Дата рождения" 
               Style="{StaticResource base_textblock}" />
                <DatePicker x:Name="DatePickerBirthdayDate" 
              SelectedDateChanged="DatePickerBirthdayDate_SelectedDateChanged" />
            </StackPanel>
            <Button x:Name="BtnGetByQr" Grid.Column="3" Content="Найти по QRcode" HorizontalAlignment="Right" Click="BtnGetByQr_Click"/>

        </WrapPanel>
        <TextBlock Grid.Row="2" x:Name="TextBlockInfo" 
           Width="300" HorizontalAlignment="Left" />

        <ListBox x:Name="ListBoxPatients"
                 ItemContainerStyle="{StaticResource listbox_item}"
         ScrollViewer.VerticalScrollBarVisibility="Visible"
         SelectedValuePath="Id"
         Grid.Row="1" Grid.Column="0">

            <ListBox.ItemTemplate>
                <DataTemplate >
                    <Grid HorizontalAlignment="Stretch" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0"
                 Width="60" Height="40" 
                 Stretch="Uniform" 
                 Source="{Binding Path=GetPhoto}" 
                 Margin="5 0 5 0"/>

                        <StackPanel Grid.Column="1" >
                    
                            <TextBlock Margin="2" FontSize="16" 
                     FontWeight="Bold" Text="{Binding Path=GetIdFIO}" 
                     Width="Auto" HorizontalAlignment="Left" />
                            <TextBlock Margin="2" FontSize="16" 
                 Text="{Binding Path=Birthday, StringFormat='d', ConverterCulture='ru-RU'}" 
                 Width="Auto" HorizontalAlignment="Left"/>
                            <TextBlock Margin="2" FontSize="16" 
                      Text="{Binding Path=GetPassport}" 
                     Width="Auto" HorizontalAlignment="Left" />
                            <TextBlock Margin="2" FontSize="16" 
                 Text="{Binding Path=Phone, StringFormat={}Телефон: {0}}"
                 Width="Auto" HorizontalAlignment="Left" />

                        </StackPanel>
                        <Image Grid.Column="2" HorizontalAlignment="Right"
                 Width="60" Height="40" 
                 Stretch="Uniform" 
                 Source="{Binding Path=GetQrCode}" 
                 Margin="5 0 5 0"/>

                        <Button x:Name="BtnMore" Grid.Column="3" Content="..." HorizontalAlignment="Right" Click="BtnMore_Click"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Page>


using MedInfoSystemApp.Models;
using MessagingToolkit.QRCode.Codec;
using MessagingToolkit.QRCode.Codec.Data;
using Microsoft.Win32;
using System;
using System.Drawing;
using System.Linq;
using System.Windows;
using System.Windows.Controls;

namespace MedInfoSystemApp.Pages
{
    /// <summary>
    /// Логика взаимодействия для PatientsPage.xaml
    /// </summary>
    public partial class PatientsPage : Page
    {
        int _itemcount = 0; // количество записей в таблице Events
        public PatientsPage()
        {
            InitializeComponent();
            LoadAndInitData();
        }
        /// <summary>
        /// Загрузка и подготовка данных страницы
        /// </summary>
        void LoadAndInitData()
        {
            // загрузка  в ListBox сортируем по Дате
            ListBoxPatients.ItemsSource = MicEntities.GetContext().Patients.
      OrderBy(p => p.Id).ToList();
            // запоминаем общще количество  в БД
            _itemcount = ListBoxPatients.Items.Count;

           
            TextBlockInfo.Text = $" Результат запроса: {_itemcount} записей из {_itemcount}";
        }

        private void PageIsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            //обновление данных после каждой активации окна
            if (Visibility == Visibility.Visible)
            {
                MicEntities.GetContext().ChangeTracker.Entries().ToList().
        ForEach(p => p.Reload());
                ListBoxPatients.ItemsSource = MicEntities.GetContext().Patients.
        OrderBy(p => p.Id).ToList();
            }
        }

        // Поиск , которые содержат данную поисковую строку
        private void TBoxSearchTextChanged(object sender, TextChangedEventArgs e)
        {
            UpdateData();
        }
        /// <summary>
        /// Метод для фильтрации и сортировки данных
        /// </summary>
        private void UpdateData()
        {
            // получаем актуальный список  из БД
            var currentPatients = MicEntities.GetContext().Patients.OrderBy(p => p.Id).ToList();
           
            if (DatePickerBirthdayDate.SelectedDate != null)
                currentPatients = currentPatients.
        Where(p => p.Birthday == DatePickerBirthdayDate.SelectedDate).ToList();
            // выбор тех, в названии которых есть поисковая строка
            currentPatients = currentPatients.Where(p => p.Surname.ToLower().Contains(TBoxSurname.Text.ToLower())).ToList();
            currentPatients = currentPatients.Where(p => p.Name.ToLower().Contains(TBoxName.Text.ToLower())).ToList();
            currentPatients = currentPatients.Where(p => p.PassportNumber.ToString().ToLower().Contains(TBoxPassportNumber.Text.ToLower())).ToList();
            currentPatients = currentPatients.Where(p => p.PassportSeries.ToString().ToLower().Contains(TBoxPassportSeries.Text.ToLower())).ToList();
            currentPatients = currentPatients.Where(p => p.Id.ToString().ToLower().Contains(TBoxID.Text.ToLower())).ToList();
            // В качестве источника данных присваиваем список данных
            ListBoxPatients.ItemsSource = currentPatients;
            // отображение количества записей
            TextBlockInfo.Text = $" Результат запроса: {currentPatients.Count} " +
                                                    $"записей из {_itemcount}";
        }

       

        private void DatePickerBirthdayDate_SelectedDateChanged(object sender, SelectionChangedEventArgs e)
        {
            UpdateData();
        }

        private void BtnMore_Click(object sender, RoutedEventArgs e)
        {
            Patient patient = (sender as Button).DataContext as Patient;
            Manager.MainFrame.Navigate(new AddPatient(patient));
        }

        private void BtnGetByQr_Click(object sender, RoutedEventArgs e)
        {
            // получение информации по QrCode
            // используется библиотека MessagingToolkit.QRCode
            QRCodeDecoder decoder = new QRCodeDecoder();
            OpenFileDialog openFileDialog = new OpenFileDialog();
            if (openFileDialog.ShowDialog() == true)
            {
            //    imgQR.Source = new BitmapImage(new Uri(openFileDialog.FileName));

                int id = Convert.ToInt32(decoder.Decode(new QRCodeBitmapImage(new Bitmap(openFileDialog.FileName))));

                Patient patient = MicEntities.GetContext().Patients.FirstOrDefault(p => p.Id == id);
                if (patient is null)
                    MessageBox.Show("Пациент не найден");
                else
                    MessageBox.Show($"Пациент\n{patient.GetIdFIO}\n{patient.GetPassport}");
            }

        }
    }
}



<Page x:Class="MedInfoSystemApp.Pages.AddPatient"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MedInfoSystemApp.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="600" d:DesignWidth="800"
       Title="Регистрация пациента" >
  <Grid>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="200"/>
      <ColumnDefinition Width="300"/>
      <ColumnDefinition Width="120"/>
      <ColumnDefinition/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="60"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition Height="30"/>
      <RowDefinition/>
    </Grid.RowDefinitions>

    <Grid Background="{StaticResource additional}" Grid.ColumnSpan="4"/>
     
    <Image  Margin="10" HorizontalAlignment="Left"/>
    <TextBlock Grid.Row="0" Text="Регистрация пациента"  
           Grid.ColumnSpan="4"
           HorizontalAlignment="Center" 
           VerticalAlignment="Center"
           Foreground="{StaticResource main}"
           FontSize="20"
           FontWeight="Bold"/>

    <TextBlock Grid.Row="1" Text="Id Number:"   
           Style="{StaticResource add_window_textblock}"/>

    <TextBox x:Name="TextBoxIdNumber" 
         Grid.Row="1" Grid.Column="1"
         IsReadOnly="True" 
         Background="LightGray" 
         Text="{Binding Id}"/>


    <TextBlock Grid.Row="2" Text="ФИО:" 
           Style="{StaticResource add_window_textblock}"/>
    <StackPanel Grid.Row="2" Grid.Column="1" 
          Orientation="Horizontal" 
          HorizontalAlignment="Stretch" >
      <TextBox x:Name="TextBoxSurname" Width="100"
         Text="{Binding Surname}"/>
      <TextBox x:Name="TextBoxName" Width="100"
         Text="{Binding Name}"/>
      <TextBox x:Name="TextBoxPatronymic" Width="100"
         Text="{Binding Patronymic}"/>
    </StackPanel>
    <TextBlock Grid.Row="3" Text="Пол:" 
           Style="{StaticResource add_window_textblock}"/>

    <ComboBox x:Name="ComboBoxGender" Grid.Row="3" Grid.Column="1" Text="{Binding Gender}" >
      <ComboBoxItem Content="F"/>
      <ComboBoxItem Content="M"/>
    </ComboBox>

    <TextBlock Grid.Row="4" Text="Дата рождения:" 
           Style="{StaticResource add_window_textblock}"/>
    <DatePicker x:Name="DatePickerBirthday" Grid.Column="1" 
          HorizontalAlignment="Left"  Grid.Row="4" SelectedDate="{Binding Birthday}"
          VerticalAlignment="Top"/>
    <TextBlock Grid.Row="5" Text="Паспорт серия/номер:" 
           Style="{StaticResource add_window_textblock}"/>
        <StackPanel Grid.Row="5" Grid.Column="1" 
          Orientation="Horizontal" 
          HorizontalAlignment="Stretch" >
            <TextBox x:Name="TextBoxPassportSeries" Width="60" MaxLength="4"
         Text="{Binding PassportSeries}"/>
            <TextBox x:Name="TextBoxPassportNumber" Width="100" MaxLength="6"
                     Text="{Binding PassportNumber}"/>
        </StackPanel>

        <TextBlock Grid.Row="6" Text="Email:" 
           Style="{StaticResource add_window_textblock}"/>
    <TextBox x:Name="TextBoxEmail" Grid.Row="6" Grid.Column="1" 
         Text="{Binding Email}"/>
    <TextBlock Grid.Row="7" Text="Телефон:" 
           Style="{StaticResource add_window_textblock}"/>
        <TextBox x:Name="TextBoxPhone" Grid.Row="7" Grid.Column="1" 
         Text="{Binding Phone}" MaxLength="18"/>



        <TextBlock Grid.Row="8" Text="Номер страхового полиса:" 
           Style="{StaticResource add_window_textblock}"/>
        <TextBox x:Name="TextBoxPolicyNumber" Grid.Row="8" Grid.Column="1" 
         Text="{Binding PolicyNumber}" MaxLength="16"/>

        <TextBlock Grid.Row="9" Text="Дата окончания действия страхового полиса:" 
           Style="{StaticResource add_window_textblock}" TextWrapping="Wrap"/>
        <DatePicker x:Name="DatePickerPolicyExpirationDate" Grid.Column="1" SelectedDate="{Binding PolicyExpirationDate}" 
          HorizontalAlignment="Left"  Grid.Row="9" 
          VerticalAlignment="Top"/>
        <TextBlock Grid.Row="10" Text="Страховая компания:" 
           Style="{StaticResource add_window_textblock}"/>
        <TextBox x:Name="TextBoxInsuranceCompany" Grid.Row="10" Grid.Column="1"  Grid.ColumnSpan="3"
         Text="{Binding InsuranceCompany}" />

        <TextBlock Grid.Row="11" Text="Адрес:" 
           Style="{StaticResource add_window_textblock}"/>
        <TextBox x:Name="TextBoxAddress" Grid.Row="11" Grid.Column="1"  Grid.ColumnSpan="3"
         Text="{Binding Address}" />

        <TextBlock Grid.Row="12" Text="Место работы:" 
           Style="{StaticResource add_window_textblock}"/>
        <TextBox x:Name="TextBoxWorkPlace" Grid.Row="12" Grid.Column="1"  Grid.ColumnSpan="3"
         Text="{Binding WorkPlace}" />



        <TextBlock Grid.Row="1" Text="Фото:"  Grid.Column="2" 
        Style="{StaticResource add_window_textblock}" />
        <Image x:Name="ImagePatientPhoto" Grid.Row="1" Grid.Column="3" Grid.RowSpan="8" Source="{Binding GetPhoto}" />

        <Image x:Name="ImageQRCode" Grid.Row="13" Grid.Column="1" Source="{Binding GetQrCode}"/>
        <Button x:Name="ButtonLoadPhoto" Grid.Column="3" Grid.Row="9" Width="auto" Click="BtnLoadClick"
        HorizontalAlignment="Right" Margin="0"
        Content="Загрузить фото" />
    <StackPanel Orientation="Horizontal" 
          Grid.Row="13" Grid.Column="3"
          HorizontalAlignment="Center">
      <Button Width="100" Height="30" 
          Content="OK" 
          x:Name="BtnOk" Click="BtnOk_Click" />
      <Button Width="100"
          Height="30" 
          Content="Отмена" 
          x:Name="BtnCancel" />
    </StackPanel>
       
    </Grid>
</Page>



using MedInfoSystemApp.Models;
using Microsoft.Win32;
using QRCoder;
using QRCoder.Xaml;
using System;
using System.Drawing;
using System.Drawing.Imaging;
using System.IO;
using System.Text;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Media;
using System.Windows.Media.Imaging;

namespace MedInfoSystemApp.Pages
{
    /// <summary>
    /// Логика взаимодействия для AddPatient.xaml
    /// </summary>
    public partial class AddPatient : Page
    {

        private Patient _currentPatient = new Patient();
        // путь к файлу
        private string _filePath = null;
        // название текущей главной фотографии
        private string _photoName = null;
        // текущая папка приложения
        private static string _currentDirectory = Directory.GetCurrentDirectory() + @"\Images\";
        public AddPatient(Patient patient)
        {
            InitializeComponent();
            DataContext = patient;
            _currentPatient = patient;
           // GenerateQrcode();
        }


        private StringBuilder CheckFields()
        {
            StringBuilder s = new StringBuilder();
            if (string.IsNullOrWhiteSpace(_currentPatient.Surname))
                s.AppendLine("Поле Фамилия пустое");
            if (string.IsNullOrWhiteSpace(_currentPatient.Name))
                s.AppendLine("Поле Имя пустое");
            if ((DatePickerBirthday.SelectedDate is null) || (DatePickerBirthday.SelectedDate == DateTime.MinValue))
                s.AppendLine("Дата рождения не выбрана");
            if (string.IsNullOrWhiteSpace(TextBoxPassportSeries.Text) || (!int.TryParse(TextBoxPassportSeries.Text, out int series)))
                s.AppendLine("Не корректная серия паспорта");
            if (string.IsNullOrWhiteSpace(TextBoxPassportNumber.Text) || (!int.TryParse(TextBoxPassportNumber.Text, out int number)))
                s.AppendLine("Не корректный номер паспорта");

            if (string.IsNullOrWhiteSpace(_currentPatient.Address))
                s.AppendLine("Поле Адрес пустое");
            if (string.IsNullOrWhiteSpace(_currentPatient.Phone))
                s.AppendLine("Поле Телефон пустое");

            if ((!long.TryParse(TextBoxPolicyNumber.Text, out long policyNumber)) || string.IsNullOrWhiteSpace(TextBoxPolicyNumber.Text))
                s.AppendLine("Не корректный номер полиса");

            if ((DatePickerPolicyExpirationDate.SelectedDate is null ) || (DatePickerPolicyExpirationDate.SelectedDate == DateTime.MinValue))
                s.AppendLine("Не выбрана дата окончания действия страхового полиса пациента");

            if (string.IsNullOrWhiteSpace(TextBoxInsuranceCompany.Text) )
                s.AppendLine("Не указана страховая компания");

            if (string.IsNullOrWhiteSpace(TextBoxWorkPlace.Text))
                s.AppendLine("Не указано место работы");
            if (string.IsNullOrWhiteSpace(_photoName))
                s.AppendLine("фото не выбрано пустое");

            return s;
            
        }


        void GenerateQrcode()
        {
            using (QRCodeGenerator qrGenerator = new QRCodeGenerator())
            using (QRCodeData qrCodeData = qrGenerator.CreateQrCode($"{_currentPatient.Id}", QRCodeGenerator.ECCLevel.Q))
            {
                QRCode BitmapqrCode = new QRCode(qrCodeData);
                Bitmap qrCodeImage = BitmapqrCode.GetGraphic(20);

                qrCodeImage.Save(_currentDirectory + @"\MedicalCards\" + $"QrCard{_currentPatient.Id}.jpg", ImageFormat.Jpeg);

                using (XamlQRCode qrCode = new XamlQRCode(qrCodeData))
                {
                    DrawingImage qrCodeAsXaml = qrCode.GetGraphic(20);
                    ImageQRCode.Source = qrCodeAsXaml;
                }
            }

        }

        private void BtnOk_Click(object sender, RoutedEventArgs e)
        {
            StringBuilder _error = CheckFields();
            // если ошибки есть, то выводим ошибки в MessageBox
            // и прерываем выполнение 
            if (_error.Length > 0)
            {
                MessageBox.Show(_error.ToString());
                return;
            }
            try
            {
                if (_currentPatient.Id == 0)
                {
                    // процесс добавления пациента
                    // 1. Создать медкарту. Поле Qrкода пока пустое
                    Medcard medcard = new Medcard();
                    medcard.IssueDate = DateTime.Today;
                    medcard.LastVisitDate = DateTime.Today;
                    MicEntities.GetContext().Medcards.Add(medcard);
                    MicEntities.GetContext().SaveChanges();
                    // Добавили карту, потом получили id медкарты и прикрепили ее к пациенту
                    int medcardid = medcard.Id;
                    _currentPatient.MedcardId = medcardid;
                    string photo = ChangePhotoName();
                    // путь куда нужно скопировать файл
                    string dest = _currentDirectory + @"\Patients\" + photo;
                    File.Copy(_filePath, dest);
                    _currentPatient.Photo = photo;
                    MicEntities.GetContext().Patients.Add(_currentPatient);
                    MicEntities.GetContext().SaveChanges();  // Сохраняем изменения в БД
                    // Добавили пациента. Нам нужно сгенерировать qrCode на основе id пациента
                    // Надо вначале сохранить пациента в БД. Потом БД даст ему номер
                    // На основе номера пациента при помощи библиотеки QrCoder генерируем QrCode
                    GenerateQrcode();
                    medcard.QR = $"QrCard{_currentPatient.Id}.jpg";
                    // Записываем название файла в медкарту и все
                    MicEntities.GetContext().SaveChanges();
                    MessageBox.Show("Запись Изменена");
                    Manager.MainFrame.GoBack();
                }// Возвращаемся на предыдущую форму
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message.ToString());
            }
        }

        //подбор имени файла
        string ChangePhotoName()
        {
            string x = _currentDirectory + _photoName;
            string photoname = _photoName;
            int i = 0;
            if (File.Exists(x))
            {
                while (File.Exists(x))
                {
                    i++;
                    x = _currentDirectory + i.ToString() + photoname;
                }
                photoname = i.ToString() + photoname;
            }
            return photoname;
        }

        // загрузка фото 
        private void BtnLoadClick(object sender, RoutedEventArgs e)
        {
            try
            {
                
                //Диалог открытия файла
                OpenFileDialog op = new OpenFileDialog();
                op.Title = "Select a picture";
                op.Filter = "JPEG Files (*.jpeg)|*.jpeg|PNG Files (*.png)|*.png|JPG Files (*.jpg)|*.jpg|GIF Files (*.gif)|*.gif";
                // диалог вернет true, если файл был открыт
                if (op.ShowDialog() == true)
                {
                    ImagePatientPhoto.Source = new BitmapImage(new Uri(op.FileName));
                    _photoName = op.SafeFileName;
                    _filePath = op.FileName;
                }
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message, "Ошибка", MessageBoxButton.OK, MessageBoxImage.Error);
                _filePath = null;
            }

          
        }
    }
}

-------------part 2-------
<Window x:Class="WpfMICApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfMICApp"
        mc:Ignorable="d"
        Title="{Binding ElementName=MainFrame, Path=Content.Title}" 
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource base_window}" ResizeMode="NoResize"
        Height="1000" Width="1030"
        Closing="WindowClosing" Closed="WindowClosed" >
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="75"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid Background="{StaticResource additional}"/>

        <Image  Margin="10" HorizontalAlignment="Left"/>

        <TextBlock Grid.Row="0" Text="МИС" 
           HorizontalAlignment="Center" 
           VerticalAlignment="Center"
           Foreground="{StaticResource main}"
           FontSize="20" FontWeight="Bold"/>
        <Frame x:Name="MainFrame" Grid.Row="1" 
         BorderBrush="{StaticResource akcent}"
         NavigationUIVisibility="Hidden" 
         BorderThickness="1" ContentRendered="MainFrame_ContentRendered"/>
        <TextBlock x:Name="TextBlockName" Width="auto" 
           Height="40" HorizontalAlignment="Right" 
           VerticalAlignment="Top"/>
        <StackPanel Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Right" Margin="0 0 20 0">

            <Button x:Name="BtnLook" 
                 Click="BtnLook_Click" ToolTip="Отслеживание движения клиентов и сотрудников по помещениям больницы" Content="Отслеживание движения клиентов и сотрудников по помещениям больницы">

            </Button>

            <Button x:Name="BtnAddPatient" 
                 Click="BtnAddPatient_Click" ToolTip="Регистрация движения пациентов по стационару и занятость коечного фонда" Content="Регистрация движения пациентов по стационару и занятость коечного фонда">

            </Button>
            <Button x:Name="BtnBack" 
                 Click="BtnBackClick" ToolTip="Назад" Content="Назад" Visibility="Collapsed">

            </Button>
        </StackPanel>
        <Grid Grid.Row="2" Background="{StaticResource additional}"/>
    </Grid>
</Window>

using System;
using System.Windows;
using WpfMICApp.Pages;

namespace WpfMICApp
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            LoadData();
        }

        void LoadData()
        {
            MainFrame.Navigate(new LookPatientsPage());
        }


        private void WindowClosed(object sender, EventArgs e)
        {
            // показать владельца формы
            //Owner.Show();
            // или если надо, то можно закрыть приложение  командой
            Application.Current.Shutdown();
        }

        //событие попытки закрытия окна,
        // если пользователь выберет Cancel, то форму не закроем
        private void WindowClosing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            MessageBoxResult x = MessageBox.Show("Вы действительно хотите выйти?", "Выйти",
              MessageBoxButton.OKCancel, MessageBoxImage.Question);
            if (x == MessageBoxResult.Cancel)
                e.Cancel = true;
        }

        private void BtnBackClick(object sender, RoutedEventArgs e)
        {
            MainFrame.GoBack();
        }



        private void MainFrame_ContentRendered(object sender, EventArgs e)
        {
            if (MainFrame.CanGoBack)
            {
                BtnBack.Visibility = Visibility.Visible;
            }
            else
            {
                BtnBack.Visibility = Visibility.Collapsed;
            }
        }

      

        private void BtnAddPatient_Click(object sender, RoutedEventArgs e)
        {
            MainFrame.Navigate(new PatientMovePage());
        }

        private void BtnLook_Click(object sender, RoutedEventArgs e)
        {
            MainFrame.Navigate(new LookPatientsPage());

        }
    }
}


<Page x:Class="WpfMICApp.Pages.PatientMovePage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WpfMICApp.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="800" d:DesignWidth="1024"
      Title="PatientMovePage" WindowHeight="800" WindowWidth="1024">

    <Grid>
        <Grid>

            <Image Width="1024" Height="800" Source="/WpfMICApp;component/Resources/map2.png" VerticalAlignment="Top"/>
            <Canvas Name="MyCanvas" Width="1024" Height="800" VerticalAlignment="Top" />
            <Button  VerticalAlignment="Bottom" Margin="883,0,3,3" Height="44" Content="Обновить" Click="Button_Click"/>
        </Grid>
    </Grid>
</Page>


using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using WpfMICApp.Models;

namespace WpfMICApp.Pages
{
    /// <summary>
    /// Логика взаимодействия для PatientMovePage.xaml
    /// </summary>
    public partial class PatientMovePage : Page
    {
        static int dh = 10;
        static Dictionary<String, int[]> wards_points = new Dictionary<String, int[]>()
        {
           {"101", new int[]{32,666, 32,722, 32,780, 144,666, 144, 780}},
            {"102", new int[]{32,514,32,572,32,630,144,514,144,630}},
             {"103", new int[]{32,280,32,344,32,412,32,478,144,344,144,412}},
             {"104", new int[]{32,136, 32,36, 144,36, 144,136}},
            {"105", new int[]{206,136, 206,36, 318,36, 318, 136}},
            {"106", new int[]{378,136, 378,36, 490,36, 490, 136}},
            {"107", new int[]{548,136, 548,36, 660,36, 660, 136}},
            {"108", new int[]{770,24, 770,88, 770,150}},
            {"109", new int[]{880,24, 880, 88, 880, 150}},
            {"110", new int[]{990,24, 990, 88, 990, 150}},
            {"111", new int[]{1002,284, 1002, 384, 890,384,890,284}},
            {"112", new int[]{852,284, 852, 384, 750,384,750,284}},
            {"113", new int[]{706,284, 706, 384, 592,384, 592, 284}},
            {"114", new int[]{552,284, 552, 384, 440, 384, 440, 284}},
            {"115", new int[]{386, 276,386,344,386,410,386,478,296,344,296,410}},
            {"116", new int[]{388, 514, 388, 580}},
            {"117", new int[]{ 388, 616, 388, 680}},
            {"118", new int[]{ 388, 716, 388, 780}},

        };
        public PatientMovePage()
        {
            InitializeComponent();
            DrawWards();
        }

        void DrawWards()
        {
            MyCanvas.Children.Clear();
            List<Ward> wards = PROF2024Entities.GetContext().Wards.Where(p => p.DepartmentId == 2).OrderBy(p => p.Title).ToList();
            foreach (Ward ward in wards)
            {
                List<HospitalBed> hospitalBeds = ward.HospitalBeds.OrderBy(p => p.Title).ToList();
               // List<HospitalBed> hospitalBeds = PROF2024Entities.GetContext().HospitalBeds.Where(p => p.WardId == ward.Id).ToList();
                int i = 0;
                foreach (HospitalBed hospitalBed in hospitalBeds)
                {
                    int dx = wards_points[ward.Title][i] - dh;
                    int dy = wards_points[ward.Title][i+1] - dh;
                    i += 2;
                    if (hospitalBed.IsFree == false)
                    {
                        Ellipse myEllipse = new Ellipse();
                        SolidColorBrush mySolidColorBrush = new SolidColorBrush();
                        mySolidColorBrush.Color = Colors.Green;
                        myEllipse.Fill = mySolidColorBrush;
                        myEllipse.Width = 2*dh;
                        myEllipse.Height = 2*dh;
                        myEllipse.SetValue(Canvas.LeftProperty, (Double)dx);
                        myEllipse.SetValue(Canvas.TopProperty, (Double)dy);
                        MyCanvas.Children.Add(myEllipse);
                    }
                }
            }

        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            PROF2024Entities.GetContext().ChangeTracker.Entries().ToList().ForEach(p => p.Reload());

            MyCanvas.Children.Clear(); 
            DrawWards();
            MessageBox.Show("+"); 
        }
    }
}


<Page x:Class="WpfMICApp.Pages.LookPatientsPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:WpfMICApp.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="700" d:DesignWidth="1024"
      Title="LookPatientsPage">

    <Grid>
       
        <Image Width="1024" Height="700" Source="/WpfMICApp;component/Resources/map.png" VerticalAlignment="Top"/>
        <Canvas Name="MyCanvas" Width="1024" Height="700"/>
        <Button Click="Button_Click" VerticalAlignment="Bottom"/>
    </Grid>
</Page>


using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;

using System.Net;
using System.Net.Http;
using System.Text;
using System.Threading.Tasks;
using System.Timers;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using System.Windows.Threading;
using Newtonsoft.Json;

namespace WpfMICApp.Pages
{
    /// <summary>
    /// Логика взаимодействия для LookPatientsPage.xaml
    /// </summary>
    public partial class LookPatientsPage : Page
    {

        private DispatcherTimer timer;
        static Random rnd = new Random();
        public class Person
        {
            public int PersonCode { get; set; }
            public string PersonRole { get; set; }
            public string LastSecurityPointDirection { get; set; }
            public int LastSecurityPointNumber { get; set; }
            public DateTime LastSecurityPointTime { get; set; }
        }


       static Dictionary<int, int[]> skud = new Dictionary<int, int[]>()
        {
           {0, new int[]{530,10, 580,110}},
            {1, new int[]{610,10, 670,110}},
             {2, new int[]{695,10, 715,110}},
              {3, new int[]{740,10, 766,110}},
              {4, new int[]{786,10, 836,110}},
              {5, new int[]{856,10, 915,110}},
              {6, new int[]{935,10, 1010,110}},
              {7, new int[]{900,230, 1010,340}},
              {8, new int[]{776,230, 880,340}},
              {9, new int[]{710,230, 750,340}},
              {10, new int[]{650,230, 685,340}},
              {11, new int[]{575,230, 630,340}},
              {12, new int[]{460,230, 560,340}},
              {13, new int[]{410,230, 440,340}},
              {14, new int[]{225,230, 390,340}},
              {15, new int[]{95,230, 215,340}},
              {16, new int[]{10,230, 85,340}},
            {17, new int[]{10,10, 40,120}},
            {18, new int[]{55,10,80,110}},
            {19, new int[]{100,10,170,110}},
            {20, new int[]{190,10,215,110}},
            {21, new int[]{235,10,350,110}},
            {22, new int[]{370, 10, 385,110}}
            //{4, new int[]{1,1 }}
        };

        public LookPatientsPage()
        {
            InitializeComponent();
            timer = new DispatcherTimer();
            timer.Interval = TimeSpan.FromSeconds(3);
            timer.Tick += timer_Tick;
            timer.Start();
        }

        void timer_Tick(object sender, EventArgs e)
        {
            GetDataFromUrlAsync();
        }

        void GetDataFromUrlAsync()
        {
            MyCanvas.Children.Clear();
            var json = new WebClient().DownloadString("http://127.0.0.1:8080/person");
            File.AppendAllText(@"D:\path.json", json);
            var result = JsonConvert.DeserializeObject<List<Person>>(json);
            MessageBox.Show(result.Count.ToString());
            foreach (Person p in result)
            {
                DrawCircles(p);
            }


        }

       void DrawCircles(Person person)
        {
            Ellipse myEllipse = new Ellipse();
            SolidColorBrush mySolidColorBrush = new SolidColorBrush();
            mySolidColorBrush.Color = Colors.Green;
            if (person.PersonRole == "Сотрудник")
                mySolidColorBrush.Color = Colors.Blue;
            myEllipse.Fill = mySolidColorBrush;
            myEllipse.Width = 10;
            myEllipse.Height = 10;
        
            int skud_id = person.LastSecurityPointNumber;
            if (person.LastSecurityPointDirection == "in")
            {
                
                int x = rnd.Next(skud[skud_id][0], skud[skud_id][2]);
                int y = rnd.Next(skud[skud_id][1], skud[skud_id][3]);
                myEllipse.SetValue(Canvas.LeftProperty, (Double)x);
                myEllipse.SetValue(Canvas.TopProperty, (Double)y);
            }
            else
            {

                int x = rnd.Next(10, 990);
                int y = rnd.Next(150,200);
                myEllipse.SetValue(Canvas.LeftProperty, (Double)x);
                myEllipse.SetValue(Canvas.TopProperty, (Double)y);
            }
            MyCanvas.Children.Add(myEllipse);


        }

        private void Button_Click(object sender, RoutedEventArgs e)
        {
            GetDataFromUrlAsync();
        }
    }
}

 ----------------------part 4 --------------
 <Window x:Class="MICApp.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MICApp"
        mc:Ignorable="d"
       Title="{Binding ElementName=MainFrame, Path=Content.Title}" 
        WindowStartupLocation="CenterScreen"
        Style="{StaticResource base_window}" ResizeMode="NoResize"
        Height="1000" Width="1030"
        Closing="WindowClosing" Closed="WindowClosed" >
    <Grid>

        <Grid.RowDefinitions>
            <RowDefinition Height="75"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="30"/>
        </Grid.RowDefinitions>

        <Grid Background="{StaticResource additional}"/>

        <Image  Margin="10" HorizontalAlignment="Left"/>

        <TextBlock Grid.Row="0" Text="МИС" 
           HorizontalAlignment="Center" 
           VerticalAlignment="Center"
           Foreground="{StaticResource main}"
           FontSize="20" FontWeight="Bold"/>
        <Frame x:Name="MainFrame" Grid.Row="1" 
         BorderBrush="{StaticResource akcent}"
         NavigationUIVisibility="Hidden" 
         BorderThickness="1" ContentRendered="MainFrame_ContentRendered"/>
        <TextBlock x:Name="TextBlockName" Width="auto" 
           Height="40" HorizontalAlignment="Right" 
           VerticalAlignment="Top"/>
        <StackPanel Grid.Row="0" Orientation="Vertical" HorizontalAlignment="Right" Margin="0 0 20 0">

         
            <Button x:Name="BtnBack" 
                 Click="BtnBackClick" ToolTip="Назад" Content="Назад" Visibility="Collapsed">

            </Button>
        </StackPanel>
        <Grid Grid.Row="2" Background="{StaticResource additional}"/>
    </Grid>
</Window>


using MICApp.Models;
using MICApp.Pages;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MICApp
{
    /// <summary>
    /// Логика взаимодействия для MainWindow.xaml
    /// </summary>
    public partial class MainWindow : Window
    {
        public MainWindow()
        {
            InitializeComponent();
            Manager.MainFrame = MainFrame;
           MainFrame.Navigate(new TimeSheetPage());
        }

        private void BtnBackClick(object sender, RoutedEventArgs e)
        {
            Manager.MainFrame.GoBack();
        }



        private void MainFrame_ContentRendered(object sender, EventArgs e)
        {
            if (MainFrame.CanGoBack)
            {
                BtnBack.Visibility = Visibility.Visible;
            }
            else
            {
                BtnBack.Visibility = Visibility.Collapsed;
            }
        }

        private void WindowClosed(object sender, EventArgs e)
        {
            // показать владельца формы
            //Owner.Show();
            // или если надо, то можно закрыть приложение  командой
            Application.Current.Shutdown();
        }

        //событие попытки закрытия окна,
        // если пользователь выберет Cancel, то форму не закроем
        private void WindowClosing(object sender, System.ComponentModel.CancelEventArgs e)
        {
            MessageBoxResult x = MessageBox.Show("Вы действительно хотите выйти?", "Выйти",
              MessageBoxButton.OKCancel, MessageBoxImage.Question);
            if (x == MessageBoxResult.Cancel)
                e.Cancel = true;
        }


    }
}


<Page x:Class="MICApp.Pages.TimeSheetPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MICApp.Pages"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="Расписание"
    IsVisibleChanged="Page_IsVisibleChanged" 
    Style="{StaticResource base_page}">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <WrapPanel Grid.Row="0" HorizontalAlignment="Stretch" 
           Background="{StaticResource additional}">

            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="ID:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="40" x:Name="TBoxID"  
             TextChanged="TBoxID_TextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Фамилия:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="200" x:Name="TBoxSurname"  
             TextChanged="TBoxSurname_TextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Имя:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="200" x:Name="TBoxName"  
             TextChanged="TBoxName_TextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal"/>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Специализация:" 
               Style="{StaticResource base_textblock}"/>
                <ComboBox Width="275" x:Name="ComboSpecialization"
                          FontSize="14" Padding="3" 
                         DisplayMemberPath="Title" 
                          SelectionChanged="ComboSpecialization_SelectionChanged"/>
            </StackPanel>


            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Дата" 
               Style="{StaticResource base_textblock}" />
                <DatePicker x:Name="DatePickerDate" 
              SelectedDateChanged="DatePickerDate_SelectedDateChanged" />
            </StackPanel>
            <CheckBox Content="Расписание на неделю" x:Name="CheckBoxTimeSheetOnWeek" Foreground="White" VerticalAlignment="Center" Checked="CheckBoxTimeSheetOnWeek_Checked" Unchecked="CheckBoxTimeSheetOnWeek_Unchecked"/>
            <Button x:Name="BtnAdd" Grid.Column="3" Content="Добавить" HorizontalAlignment="Right" Click="BtnAdd_Click"/>

        </WrapPanel>
        <TextBlock Grid.Row="2" x:Name="TextBlockInfo" 
           Width="300" HorizontalAlignment="Left" />

        <ListBox x:Name="ListBoxEmployeeTimeSheet"
                 ItemContainerStyle="{StaticResource listbox_item}"
         ScrollViewer.VerticalScrollBarVisibility="Visible"
         SelectedValuePath="Id"
         Grid.Row="1" Grid.Column="0">

            <ListBox.ItemTemplate>
                <DataTemplate >
                    <Grid HorizontalAlignment="Stretch" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="300"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0"
                 Width="60" Height="40" 
                 Stretch="Uniform" 
                 Source="{Binding Path=GetPhoto}" 
                 Margin="5 0 5 0"/>
                        <StackPanel Grid.Column="1" >

                            <TextBlock Margin="2" FontSize="16" 
                     FontWeight="Bold" Text="{Binding Path=GetIdFIO}" 
                     Width="Auto" HorizontalAlignment="Left" />
                            <TextBlock Margin="2" FontSize="16" 
                 Text="{Binding Path=Date, StringFormat='d', ConverterCulture='ru-RU'}" 
                 Width="Auto" HorizontalAlignment="Left"/>
                            <TextBlock Margin="2" FontSize="16" 
                 Text="{Binding Path=GetTime}" Width="Auto" HorizontalAlignment="Left"/>
                            
                            <TextBlock Margin="2" FontSize="16" 
                 Text="{Binding Path=GetRoom}" 
                 Width="Auto" HorizontalAlignment="Left" />
              
                        </StackPanel>

                        <TextBlock Margin="2" FontSize="16" Grid.Column="2"
                 Text="{Binding Path=GetCoupons}" Width="Auto" HorizontalAlignment="Left" />
                        <Button x:Name="BtnEdit" Grid.Column="3" Content="Записаться к врачу" HorizontalAlignment="Right" Click="BtnEdit_Click"/>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
    </Grid>
</Page>


using MICApp.Models;
using MICApp.Windows;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MICApp.Pages
{
    /// <summary>
    /// Логика взаимодействия для TimeSheetPage.xaml
    /// </summary>
    public partial class TimeSheetPage : Page
    {
        int _itemcount = 0;
        public TimeSheetPage()
        {
            InitializeComponent();
        }

        void LoadDataGrid()
        {
            MicEntities.GetContext().ChangeTracker.Entries().ToList().ForEach(p => p.Reload());
            List<TimeSheet> timeSheets = MicEntities.GetContext().TimeSheets.OrderBy(p => p.Date).ToList();
            ListBoxEmployeeTimeSheet.ItemsSource = timeSheets;
            _itemcount = timeSheets.Count;
            TextBlockInfo.Text = $" Результат запроса: {timeSheets.Count} записей из {timeSheets.Count}";
        }

        void LoadComboBoxItems()
        {
            var specialisation = MicEntities.GetContext().Specializations.OrderBy(p => p.Title).ToList();
            specialisation.Insert(0, new Specialization
            {
                Title = "Все виды"
            }
            );
            ComboSpecialization.ItemsSource = specialisation;
            ComboSpecialization.SelectedIndex = 0;


        }

        /// <summary>
        /// Метод для фильтрации и сортировки данных
        /// </summary>
        private void UpdateData()
        {
            // получаем текущие данные из бд
            var currentData = MicEntities.GetContext().TimeSheets.OrderBy(p => p.Date).ToList();

            if (ComboSpecialization.SelectedIndex > 0)
                currentData = currentData.Where(p => p.Employee.SpecializationId == (ComboSpecialization.SelectedItem as Specialization).Id).ToList();

            // выбор тех товаров, в названии которых есть поисковая строка
            currentData = currentData.Where(p => p.Employee.Name.ToLower().Contains(TBoxName.Text.ToLower())).ToList();
            currentData = currentData.Where(p => p.Employee.Surname.ToLower().Contains(TBoxSurname.Text.ToLower())).ToList();
            currentData = currentData.Where(p => p.Employee.Id.ToString().ToLower().Contains(TBoxID.Text.ToLower())).ToList();

            if (CheckBoxTimeSheetOnWeek.IsChecked == true)
            {
                DayOfWeek dayOfWeek = DayOfWeek.Monday;

                DayOfWeek currentDayOfWeek = DateTime.Now.DayOfWeek;
                int k = currentDayOfWeek - dayOfWeek;
                MessageBox.Show(k.ToString());
                DateTime startDay = DateTime.Now.AddDays(-(k+1));
                DateTime endDay = startDay.AddDays(7);
                currentData = currentData.Where(p => (p.Date >= startDay) && (p.Date <= endDay)).ToList();

            }
            else
            {
                if (DatePickerDate.SelectedDate != null)
                {
                    currentData = currentData.Where(p => p.Date == DatePickerDate.SelectedDate).ToList();
                }
            }
            // В качестве источника данных присваиваем список данных
            ListBoxEmployeeTimeSheet.ItemsSource = currentData;
            // отображение количества записей
            TextBlockInfo.Text = $" Результат запроса: {currentData.Count} записей из {_itemcount}";
        }

        private void DatePickerDate_SelectedDateChanged(object sender, SelectionChangedEventArgs e)
        {
            UpdateData();
        }

        private void ComboSpecialization_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            UpdateData();
        }

        private void TBoxID_TextChanged(object sender, TextChangedEventArgs e)
        {
            UpdateData();
        }

        private void TBoxSurname_TextChanged(object sender, TextChangedEventArgs e)
        {
            UpdateData();
        }

        private void TBoxName_TextChanged(object sender, TextChangedEventArgs e)
        {
            UpdateData();
        }

        private void Page_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            //событие отображения данного Page
            // обновляем данные каждый раз когда активируется этот Page
            if (Visibility == Visibility.Visible)
            {

                ListBoxEmployeeTimeSheet.ItemsSource = null;
                //загрузка обновленных данных
       
                LoadComboBoxItems();
                LoadDataGrid();

            }
        }

        private void BtnEdit_Click(object sender, RoutedEventArgs e)
        {
            try
            {
                PatientReceptionWindow  window = new PatientReceptionWindow((sender as Button).DataContext as TimeSheet);
                if (window.ShowDialog() == true)
                {
                    LoadDataGrid();
                }
            }
            catch
            {
                MessageBox.Show("Ошибка");
            }
        }

        private void BtnAdd_Click(object sender, RoutedEventArgs e)
        {
            Manager.MainFrame.Navigate(new AddTimeSheet(new TimeSheet()));
        }

        private void CheckBoxTimeSheetOnWeek_Checked(object sender, RoutedEventArgs e)
        {
            UpdateData();
        }

        private void CheckBoxTimeSheetOnWeek_Unchecked(object sender, RoutedEventArgs e)
        {
            UpdateData();
        }
    }
}


<Page x:Class="MICApp.Windows.AddTimeSheet"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:MICApp.Windows"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
     Title="Добавить "  IsVisibleChanged="Page_IsVisibleChanged">
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="60"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="30"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>

        <Grid Background="{StaticResource additional}" Grid.ColumnSpan="4"/>

        <TextBlock Grid.Row="0"  
           Grid.ColumnSpan="4"
           HorizontalAlignment="Center" 
           VerticalAlignment="Center"
           Foreground="{StaticResource main}"
           FontSize="20"
           FontWeight="Bold" Text="Добавить расписание"/>


        <Image  Margin="10" HorizontalAlignment="Left"/>
        <WrapPanel Grid.Row="1" HorizontalAlignment="Stretch"  Grid.ColumnSpan="2"
           Background="{StaticResource additional}">

            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="ID:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="40" x:Name="TBoxID"  
             TextChanged="TBoxID_TextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Фамилия:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="200" x:Name="TBoxSurname"  
             TextChanged="TBoxSurname_TextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Имя:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="200" x:Name="TBoxName"  
             TextChanged="TBoxName_TextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal"/>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Специализация:" 
               Style="{StaticResource base_textblock}"/>
                <ComboBox Width="275" x:Name="ComboSpecialization"
                          FontSize="14" Padding="3" 
                         DisplayMemberPath="Title" 
                          SelectionChanged="ComboSpecialization_SelectionChanged"/>
            </StackPanel>
        </WrapPanel>

        <TextBlock Grid.Row="3" x:Name="TextBlockInfo" Width="300" HorizontalAlignment="Left" Grid.ColumnSpan="2"/>

        <ListBox x:Name="ListBoxEmployee" Grid.ColumnSpan="2"
                 ItemContainerStyle="{StaticResource listbox_item}"
         ScrollViewer.VerticalScrollBarVisibility="Visible"
         SelectedValuePath="Id"
         Grid.Row="2" Grid.Column="0">

            <ListBox.ItemTemplate>
                <DataTemplate >
                    <Grid HorizontalAlignment="Stretch" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>
                        <Image Grid.Column="0"
                 Width="60" Height="40" 
                 Stretch="Uniform" 
                 Source="{Binding Path=GetPhoto}" 
                 Margin="5 0 5 0"/>
                        <StackPanel Grid.Column="1" >
                            <TextBlock Margin="2" FontSize="16" 
                     FontWeight="Bold" Text="{Binding Path=GetIdFIO}" 
                     Width="Auto" HorizontalAlignment="Left" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <TextBlock Grid.Row="4" Text="Дата:" 
           Style="{StaticResource add_window_textblock}" Margin="0,5,10,0" VerticalAlignment="Top" Height="19"/>
        <DatePicker x:Name="DatePickerDate" Grid.Column="1" 
          HorizontalAlignment="Left"  Grid.Row="4" SelectedDate="{Binding Date}"
          VerticalAlignment="Top"/>

        <ComboBox x:Name="ComboBoxTimeBegin" Grid.Row="5" Grid.Column="1"  >
            <ComboBoxItem Content="8:00"/>
            <ComboBoxItem Content="9:00"/>
            <ComboBoxItem Content="10:00"/>
            <ComboBoxItem Content="11:00"/>
            <ComboBoxItem Content="12:00"/>
            <ComboBoxItem Content="13:00"/>
            <ComboBoxItem Content="14:00"/>
            <ComboBoxItem Content="15:00"/>
            <ComboBoxItem Content="16:00"/>
            <ComboBoxItem Content="17:00"/>
            <ComboBoxItem Content="18:00"/>
            <ComboBoxItem Content="19:00"/>
        </ComboBox>

        <ComboBox x:Name="ComboBoxTimeEnd" Grid.Row="6" Grid.Column="1"  >
            <ComboBoxItem Content="8:00"/>
            <ComboBoxItem Content="9:00"/>
            <ComboBoxItem Content="10:00"/>
            <ComboBoxItem Content="11:00"/>
            <ComboBoxItem Content="12:00"/>
            <ComboBoxItem Content="13:00"/>
            <ComboBoxItem Content="14:00"/>
            <ComboBoxItem Content="15:00"/>
            <ComboBoxItem Content="16:00"/>
            <ComboBoxItem Content="17:00"/>
            <ComboBoxItem Content="18:00"/>
            <ComboBoxItem Content="19:00"/>
        </ComboBox>

        <ComboBox x:Name="ComboBoxRoom" Grid.Row="7" Grid.Column="1" DisplayMemberPath="Title" >

        </ComboBox>
        <TextBlock Grid.Row="5" 
           Style="{StaticResource add_window_textblock}"><Run Text="Время начала приёма"/><Run Text=":"/></TextBlock>
        <StackPanel Grid.Row="5" Grid.Column="1" 
          Orientation="Horizontal" 
          HorizontalAlignment="Stretch" />

        <TextBlock Grid.Row="6" 
           Style="{StaticResource add_window_textblock}" Margin="0,6,10,6" Width="178"><Run Text="Время око"/><Run Text="нчания приёма"/><Run Text=":"/></TextBlock>
        <TextBlock Grid.Row="7" 
           Style="{StaticResource add_window_textblock}"><Run Text="Кабинет"/><Run Text=":"/></TextBlock>

        <StackPanel Orientation="Horizontal"  Grid.Row="8" Grid.Column="0"
          HorizontalAlignment="Center">
            <Button Width="100" Height="30" 
          Content="OK" 
          x:Name="BtnOk" Click="BtnOk_Click" />
            <Button Width="100"
          Height="30" 
          Content="Отмена" 
          x:Name="BtnCancel" Click="BtnCancel_Click" />
        </StackPanel>


    </Grid>
</Page>


using MICApp.Models;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;

namespace MICApp.Windows
{
    /// <summary>
    /// Логика взаимодействия для AddTimeSheet.xaml
    /// </summary>
    public partial class AddTimeSheet : Page
    {
        int _itemcount = 0;
        private TimeSheet _currentTimeSheet= new TimeSheet();
        public AddTimeSheet(TimeSheet timeSheet)
        {
            InitializeComponent();
            _currentTimeSheet = timeSheet;
            DataContext = timeSheet;
        }

        private StringBuilder CheckFields()
        {
            StringBuilder s = new StringBuilder();
            if (ComboBoxTimeBegin.SelectedIndex == -1)
                s.AppendLine("Укажите время начала приёма");

            if (ComboBoxTimeEnd.SelectedIndex == -1)
                s.AppendLine("Укажите время окончания приёма");

            if (ComboBoxRoom.SelectedIndex == -1)
                s.AppendLine("Укажите кабинет");

            if ((DatePickerDate.SelectedDate is null) || (DatePickerDate.SelectedDate == DateTime.MinValue))
                s.AppendLine("Не выбрана дата приёма");     

            if (ListBoxEmployee.SelectedItems.Count == 0)
                s.AppendLine("Не выбран врач");

            if (ComboBoxTimeBegin.SelectedIndex >= ComboBoxTimeEnd.SelectedIndex)
                s.AppendLine("Время окончания приёма не может совпадать с временем начала ");
            return s;
        }

        void LoadDataGrid()
        {
            MicEntities.GetContext().ChangeTracker.Entries().ToList().ForEach(p => p.Reload());
            List<Employee> employees = MicEntities.GetContext().Employees.OrderBy(p => p.Id).ToList();
            ListBoxEmployee.ItemsSource = employees;
            _itemcount = employees.Count;

            ComboBoxRoom.ItemsSource = MicEntities.GetContext().Rooms.Where(r => r.RoomTypeId == 2).OrderBy(p => p.Title).ToList();
            TextBlockInfo.Text = $" Результат запроса: {employees.Count} записей из {employees.Count}";
        }

        void LoadComboBoxItems()
        {
            var specialisation = MicEntities.GetContext().Specializations.OrderBy(p => p.Title).ToList();
            specialisation.Insert(0, new Specialization
            {
                Title = "Все виды"
            }
            );
            ComboSpecialization.ItemsSource = specialisation;
            ComboSpecialization.SelectedIndex = 0;

        }

        /// <summary>
        /// Метод для фильтрации и сортировки данных
        /// </summary>
        private void UpdateData()
        {
            // получаем текущие данные из бд
            var currentData = MicEntities.GetContext().Employees.OrderBy(p => p.Id).ToList();

            if (ComboSpecialization.SelectedIndex > 0)
                currentData = currentData.Where(p => p.SpecializationId == (ComboSpecialization.SelectedItem as Specialization).Id).ToList();

            // выбор тех товаров, в названии которых есть поисковая строка
            currentData = currentData.Where(p => p.Name.ToLower().Contains(TBoxName.Text.ToLower())).ToList();
            currentData = currentData.Where(p => p.Surname.ToLower().Contains(TBoxSurname.Text.ToLower())).ToList();
            currentData = currentData.Where(p => p.Id.ToString().ToLower().Contains(TBoxID.Text.ToLower())).ToList();

            // В качестве источника данных присваиваем список данных
            ListBoxEmployee.ItemsSource = currentData;
            // отображение количества записей
            TextBlockInfo.Text = $" Результат запроса: {currentData.Count} записей из {_itemcount}";
        }

        private void DatePickerDate_SelectedDateChanged(object sender, SelectionChangedEventArgs e)
        {
            UpdateData();
        }

        private void ComboSpecialization_SelectionChanged(object sender, SelectionChangedEventArgs e)
        {
            UpdateData();
        }

        private void TBoxID_TextChanged(object sender, TextChangedEventArgs e)
        {
            UpdateData();
        }

        private void TBoxSurname_TextChanged(object sender, TextChangedEventArgs e)
        {
            UpdateData();
        }

        private void TBoxName_TextChanged(object sender, TextChangedEventArgs e)
        {
            UpdateData();
        }

        private void Page_IsVisibleChanged(object sender, DependencyPropertyChangedEventArgs e)
        {
            //событие отображения данного Page
            // обновляем данные каждый раз когда активируется этот Page
            if (Visibility == Visibility.Visible)
            {
                ListBoxEmployee.ItemsSource = null;
                //загрузка обновленных данных

                LoadComboBoxItems();
                LoadDataGrid();

            }
        }

        private void BtnOk_Click(object sender, RoutedEventArgs e)
        {
            StringBuilder _error = CheckFields();
            // если ошибки есть, то выводим ошибки в MessageBox
            // и прерываем выполнение 
            if (_error.Length > 0)
            {
                MessageBox.Show(_error.ToString());
                return;
            }
            try
            {
                if (_currentTimeSheet.Id == 0)
                {
                    Employee em =  ListBoxEmployee.SelectedItems[0] as Employee;
                    _currentTimeSheet.EmployeeId = em.Id;
                    _currentTimeSheet.DurationPersonTime = 30;
                    _currentTimeSheet.RoomId = (ComboBoxRoom.SelectedItem as Room).Id;
                    _currentTimeSheet.TimeBegin = TimeSpan.Parse(ComboBoxTimeBegin.Text);
                    _currentTimeSheet.TimeEnd = TimeSpan.Parse(ComboBoxTimeEnd.Text);

                    MicEntities.GetContext().TimeSheets.Add(_currentTimeSheet);
                    MicEntities.GetContext().SaveChanges();

                    List<PatientReception> patientReceptions = new List<PatientReception>();
                    TimeSpan timeBegin = _currentTimeSheet.TimeBegin;
                    TimeSpan timeEnd = _currentTimeSheet.TimeEnd;
                    TimeSpan duration = new TimeSpan(0, 30, 0);
                    TimeSpan timeSpan = timeBegin.Add(duration);
                    int couponNumber = 1;
                    while (timeSpan <= timeEnd)
                    {
                        PatientReception patientReception = new PatientReception();
                        patientReception.Status = false;
                        patientReception.TimeSheetId = _currentTimeSheet.Id;
                        patientReception.TimeBegin = timeBegin;
                        patientReception.TimeEnd = timeSpan;
                        patientReception.CouponNumber = couponNumber;
                        couponNumber++;
                        timeSpan = timeSpan.Add(duration);
                        timeBegin = timeBegin.Add(duration);
                        patientReceptions.Add(patientReception);
                    }


              

                    MicEntities.GetContext().PatientReceptions.AddRange(patientReceptions);
                    MicEntities.GetContext().SaveChanges();
                    MessageBox.Show("Запись добавлена");
                    Manager.MainFrame.GoBack();
                }// Возвращаемся на предыдущую форму
            }
            catch (Exception ex)
            {
                MessageBox.Show(ex.Message.ToString());
            }
        }

        private void BtnCancel_Click(object sender, RoutedEventArgs e)
        {
            Manager.MainFrame.GoBack();
        }
    }
}


<Window x:Class="MICApp.Windows.PatientReceptionWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MICApp.Windows"
        mc:Ignorable="d"
        Title="PatientReceptionWindow" Height="450" Width="800" WindowStartupLocation="CenterScreen" >

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="40"/>
            <RowDefinition Height="50"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="187" />
            <ColumnDefinition />
        </Grid.ColumnDefinitions>

        <WrapPanel Grid.Row="0" HorizontalAlignment="Stretch"  Grid.ColumnSpan="2"
           Background="{StaticResource additional}">

            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="ID:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="40" x:Name="TBoxID"  
             TextChanged="TBoxSearchTextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Фамилия:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="200" x:Name="TBoxSurname"  
             TextChanged="TBoxSearchTextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Имя:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="200" x:Name="TBoxName"  
             TextChanged="TBoxSearchTextChanged"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Серия паспорта:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="100" x:Name="TBoxPassportSeries"  
             TextChanged="TBoxSearchTextChanged" MaxLength="4"/>
            </StackPanel>
            <StackPanel Orientation="Horizontal">
                <TextBlock  Text="Номер паспорта:" 
               Style="{StaticResource base_textblock}"/>
                <TextBox Width="100" x:Name="TBoxPassportNumber"  
             TextChanged="TBoxSearchTextChanged" MaxLength="6"/>
            </StackPanel>


            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Дата рождения" 
               Style="{StaticResource base_textblock}" />
                <DatePicker x:Name="DatePickerBirthdayDate" 
              SelectedDateChanged="DatePickerBirthdayDate_SelectedDateChanged" />
            </StackPanel>
            <Button x:Name="BtnGetByQr" Grid.Column="3" Content="Найти по QRcode" HorizontalAlignment="Right" Click="BtnGetByQr_Click"/>

        </WrapPanel>
        <TextBlock Grid.Row="2" x:Name="TextBlockInfo" 
           Width="300" HorizontalAlignment="Left" />

        <ListBox x:Name="ListBoxPatients" Grid.ColumnSpan="2"
                 ItemContainerStyle="{StaticResource listbox_item}"
         ScrollViewer.VerticalScrollBarVisibility="Visible"
         SelectedValuePath="Id"
         Grid.Row="1" Grid.Column="0" >

            <ListBox.ItemTemplate>
                <DataTemplate >
                    <Grid HorizontalAlignment="Stretch" UseLayoutRounding="True">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>

                        <Image Grid.Column="0"
                 Width="60" Height="40" 
                 Stretch="Uniform" 
                 Source="{Binding Path=GetPhoto}" 
                 Margin="5 0 5 0"/>

                        <StackPanel Grid.Column="1" >

                            <TextBlock Margin="2" FontSize="16" 
                     FontWeight="Bold" Text="{Binding Path=GetIdFIO}" 
                     Width="Auto" HorizontalAlignment="Left" />
                            <TextBlock Margin="2" FontSize="16" 
                 Text="{Binding Path=Birthday, StringFormat='d', ConverterCulture='ru-RU'}" 
                 Width="Auto" HorizontalAlignment="Left"/>
                            <TextBlock Margin="2" FontSize="16" 
                      Text="{Binding Path=GetPassport}" 
                     Width="Auto" HorizontalAlignment="Left" />
                            <TextBlock Margin="2" FontSize="16" 
                 Text="{Binding Path=Phone, StringFormat={}Телефон: {0}}"
                 Width="Auto" HorizontalAlignment="Left" />

                        </StackPanel>
                        <Image Grid.Column="2" HorizontalAlignment="Right"
                 Width="60" Height="40" 
                 Stretch="Uniform" 
                 Source="{Binding Path=GetQrCode}" 
                 Margin="5 0 5 0"/>

                    </Grid>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <TextBlock Text="Талон" VerticalAlignment="Center" Grid.Row="3" Margin="20 0 0 0"  Grid.Column="0" Height="16"  />
        <ComboBox Grid.Row="3" Grid.Column="1" x:Name="ComboCoupon" 
                  SelectedItem="{Binding PatientReception}" 
                  DisplayMemberPath="GetCoupon"/>
        <StackPanel HorizontalAlignment="Center" Orientation="Horizontal" Grid.Row="5" Grid.ColumnSpan="2" Margin="127,0,103,0" Width="162">
            <Button IsDefault="True"  MinWidth="60" Margin="5" x:Name="BtnOk" Click="BtnOk_Click" >OK</Button>
            <Button IsCancel="True" MinWidth="60" Margin="5">Отмена</Button>
        </StackPanel>

    </Grid>
</Window>


using MessagingToolkit.QRCode.Codec;
using MessagingToolkit.QRCode.Codec.Data;
using MICApp.Models;
using Microsoft.Win32;
using System;
using System.Collections.Generic;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Shapes;

namespace MICApp.Windows
{
    /// <summary>
    /// Логика взаимодействия для PatientReceptionWindow.xaml
    /// </summary>
    public partial class PatientReceptionWindow : Window
    {
        int _itemcount = 0; // количество записей в таблице Events
        TimeSheet currentTimeSheet;
        public PatientReceptionWindow(TimeSheet timeSheet)
        {
            InitializeComponent();
            currentTimeSheet = timeSheet;
            LoadAndInitData();
        }
        /// <summary>
        /// Загрузка и подготовка данных страницы
        /// </summary>
        void LoadAndInitData()
        {
            // загрузка мероприятий в ListBox сортируем по Дате
            ListBoxPatients.ItemsSource = MicEntities.GetContext().Patients.
      OrderBy(p => p.Id).ToList();


            List<PatientReception> patientReception = MicEntities.GetContext().PatientReceptions.Where(x=> x.Status == false && x.TimeSheetId == currentTimeSheet.Id ).OrderBy(x => x.CouponNumber).ToList();

            ComboCoupon.ItemsSource = patientReception;
            // запоминаем общще количество мероприятий в БД
            _itemcount = ListBoxPatients.Items.Count;


            TextBlockInfo.Text = $" Результат запроса: {_itemcount} записей из {_itemcount}";
        }

       
        // Поиск мероприятий, которые содержат данную поисковую строку
        private void TBoxSearchTextChanged(object sender, TextChangedEventArgs e)
        {
            UpdateData();
        }
        /// <summary>
        /// Метод для фильтрации и сортировки данных
        /// </summary>
        private void UpdateData()
        {
            // получаем актуальный список мероприятий из БД
            var currentPatients = MicEntities.GetContext().Patients.OrderBy(p => p.Id).ToList();

            if (DatePickerBirthdayDate.SelectedDate != null)
                currentPatients = currentPatients.
        Where(p => p.Birthday == DatePickerBirthdayDate.SelectedDate).ToList();
            // выбор тех мероприятий, в названии которых есть поисковая строка
            currentPatients = currentPatients.Where(p => p.Surname.ToLower().Contains(TBoxSurname.Text.ToLower())).ToList();
            currentPatients = currentPatients.Where(p => p.Name.ToLower().Contains(TBoxName.Text.ToLower())).ToList();
            currentPatients = currentPatients.Where(p => p.PassportNumber.ToString().ToLower().Contains(TBoxPassportNumber.Text.ToLower())).ToList();
            currentPatients = currentPatients.Where(p => p.PassportSeries.ToString().ToLower().Contains(TBoxPassportSeries.Text.ToLower())).ToList();
            currentPatients = currentPatients.Where(p => p.Id.ToString().ToLower().Contains(TBoxID.Text.ToLower())).ToList();
            // В качестве источника данных присваиваем список данных
            ListBoxPatients.ItemsSource = currentPatients;
            // отображение количества записей
            TextBlockInfo.Text = $" Результат запроса: {currentPatients.Count} " +
                                                    $"записей из {_itemcount}";
        }



        private void DatePickerBirthdayDate_SelectedDateChanged(object sender, SelectionChangedEventArgs e)
        {
            UpdateData();
        }

       
        private void BtnGetByQr_Click(object sender, RoutedEventArgs e)
        {
            // получение информации по QrCode
            // используется библиотека MessagingToolkit.QRCode
            QRCodeDecoder decoder = new QRCodeDecoder();
            OpenFileDialog openFileDialog = new OpenFileDialog();
            if (openFileDialog.ShowDialog() == true)
            {
                //    imgQR.Source = new BitmapImage(new Uri(openFileDialog.FileName));

                int id = Convert.ToInt32(decoder.Decode(new QRCodeBitmapImage(new Bitmap(openFileDialog.FileName))));

                Patient patient = MicEntities.GetContext().Patients.FirstOrDefault(p => p.Id == id);
                if (patient is null)
                    MessageBox.Show("Пациент не найден");
                else
                    MessageBox.Show($"Пациент\n{patient.GetIdFIO}\n{patient.GetPassport}");
            }

        }

        private void BtnOk_Click(object sender, RoutedEventArgs e)
        {
            if (ListBoxPatients.SelectedItems.Count == 0)
            {
                MessageBox.Show("Пациент не выбран");
                return;
            }
            if (ComboCoupon.SelectedIndex == -1)
            {
                MessageBox.Show("Не выбран талон");
                return;
            }
            int patientId = (ListBoxPatients.SelectedItems[0] as Patient).Id;
            PatientReception patientReception = ComboCoupon.SelectedItem as PatientReception;

            patientReception.PatientId = patientId;
            patientReception.Status = true;
            MicEntities.GetContext().SaveChanges();

            MessageBox.Show("Данные сохранены");
            DialogResult = true;

        }
    }
}


----radio---

<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             x:Class="MisApp.MainPage">

    <StackLayout Margin="15">
        <Entry x:Name="titleField" Placeholder="Введите название" />
        <Entry x:Name="photoField" Placeholder="Введите имя фото" />
        <Entry x:Name="priceField" Placeholder="Введите стоимость" />
        <Entry x:Name="isenableField" Placeholder="В наличии? (да/нет)" />
        <Button Text="Добавить" Clicked="AddItemButton" />
        <Button Text="Удалить" Clicked="DeleteItemButton" />

        <CollectionView x:Name="itemsCollection">
            <CollectionView.ItemTemplate>
                <DataTemplate>
                    <StackLayout BackgroundColor="Aqua" Padding="15">
                        <Label Text="{Binding Title}" FontAttributes="Bold" FontSize="25"/>
                        <Image Source="{Binding Photo}" Aspect="AspectFill"/>
                        <StackLayout Orientation="Horizontal">
                            <Label Text="Стоимость: " FontAttributes="Bold"/>
                            <Label Text="{Binding Price}" FontAttributes="Bold" FontSize="12"/>
                            <Label Text="руб." FontAttributes="Bold" FontSize="12"/>
                        </StackLayout>
                        <StackLayout Orientation="Horizontal">
                            <Label Text="В наличии: " FontAttributes="Bold" />
                            <Label Text="{Binding IsEnable}" FontAttributes="Bold" FontSize="12" />
                        </StackLayout>
                    </StackLayout>
                </DataTemplate>
            </CollectionView.ItemTemplate>
        </CollectionView>
    </StackLayout>

</ContentPage>

using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using Xamarin.Forms;

namespace MisApp
{
    public partial class MainPage : ContentPage
    {
        public MainPage()
        {
            InitializeComponent();
        }

        protected override void OnAppearing()
        {
            ShowItems();
        }
        private void ShowItems()
        {
            itemsCollection.ItemsSource = App.Db.GetItems();
        }

        private async void AddItemButton(object sender, EventArgs e)
        {
            string title = titleField.Text.Trim();
            string photo = photoField.Text.Trim();
            int price = Convert.ToInt32(priceField.Text.Trim());
            string isenable = isenableField.Text.Trim();
            if (title.Length<3)
            {
                await DisplayAlert("Ошибка", "Title min 3 sim", "OK");
                return;
            }
          
            else if (price<20)
            {
                await DisplayAlert("Ошибка", "Price min 20 sim", "OK");
                return;
            }
            else if (isenable.Length<5)
            {
                await DisplayAlert("Ошибка", "isenable min 5 sim", "OK");
                return;
            }
            Item item = new Item
            {
                Title = title,
                Photo=photo,
                Price=price,
                IsEnable=isenable,
            };
            App.Db.SaveItem(item);
            ShowItems();
            titleField.Text = "";
            photoField.Text = "";
            priceField.Text = "";
            isenableField.Text = "";
        }

       

        private  void DeleteItemButton(object sender, EventArgs e)
        {
            Item item = (Item)BindingContext;
            App.Db.DeleteItem(item);
            ShowItems();
        }
    }
}

using System;
using System.Collections.Generic;
using System.Text;
using SQLite;

namespace MisApp
{
   public class Item
    {
        [PrimaryKey, AutoIncrement]
        public int ID { get; set; }
        public string Title { get; set; }
        public string Photo { get; set; }
        public int Price { get; set; }
        public string IsEnable { get; set; }

    }
}

using System;
using System.Collections.Generic;
using System.Text;
using SQLite;

namespace MisApp
{
    public class DB
    {
        private readonly SQLiteConnection conn;
        public DB(string path)
        {
            conn = new SQLiteConnection(path);
            conn.CreateTable<Item>();
        }
        public List<Item> GetItems()
        {
            return conn.Table<Item>().ToList();
        }

        public int SaveItem(Item item)
        {
            return conn.Insert(item);
        }

        public int DeleteItem(Item item)
        {
            return conn.Delete(item);
        }
    }
}
